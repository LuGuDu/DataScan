{"version":3,"sources":["assets/img/analyze1.jpg","assets/img/analyze2.webp","assets/img/analyze3.jpg","assets/img/dos_attack.webp","assets/img/probing_attack.png","assets/img/r2l_attack.webp","assets/img/u2r_attack.png","components/Navbars/LoginNavBar.js","components/PageHeader/PageHeader.js","components/Footer/NoLoggedFooter.js","views/IndexSections/AnalyzeInfo.js","views/Index.js","components/Role-based-access/PermissionsMap.js","components/Role-based-access/PermissionsGate.js","components/Navbars/IndexNavbar.js","components/Footer/Footer.js","components/Role-based-access/RestrictedContent.js","views/Welcome.js","components/Operations/Login.js","components/Operations/Register.js","components/PageHeader/AnalyzeHeader.js","components/Operations/Analyze.js","components/PageHeader/AttackTypesInfoHeader.js","views/AttacksSections/DOSInfo.js","views/AttacksSections/ProbeInfo.js","views/AttacksSections/R2LInfo.js","views/AttacksSections/U2RInfo.js","components/Operations/AttackTypesInfo.js","components/PageHeader/ContactHeader.js","components/Operations/Contact.js","components/PageHeader/AboutHeader.js","components/Operations/About.js","components/Navbars/AdminNavbar.js","components/PageHeader/AdminHeader.js","components/Operations/Admin.js","components/Admin/Model/ModelInfo.js","components/Admin/Model/ModelTrain.js","components/Admin/Model/ModelHistory.js","components/Admin/Users/UserList.js","components/Admin/Users/CreateUserForm.js","App.js","index.js","assets/img/square1.png"],"names":["IndexNavbar","React","useState","collapseOpen","setCollapseOpen","collapseOut","setCollapseOut","setColor","useEffect","window","addEventListener","changeColor","removeEventListener","document","documentElement","scrollTop","body","toggleCollapse","classList","toggle","smoothScroll","e","scrollTo","top","behavior","Navbar","className","expand","Container","NavbarBrand","to","tag","Link","id","onClick","Collapse","navbar","isOpen","onExiting","onExited","Row","Col","xs","href","Nav","NavItem","NavLink","rel","target","title","UncontrolledDropdown","nav","DropdownToggle","caret","color","preventDefault","DropdownMenu","DropdownItem","PageHeader","NoLoggedFooter","md","Button","carouselItems","src","require","default","altText","Basics","navigate","useNavigate","Label","analyze","UncontrolledCarousel","items","Index","ROLES","SCOPES","PERMISSIONS","PermissionsGate","children","RenderForbiddenContent","scopes","role","roleKey","sessionStorage","getItem","AES","decrypt","toString","enc","Utf8","permissionGranted","permissions","scopesMap","forEach","scope","some","permission","hasPermission","goAdminPane","setItem","logout","Footer","RestrictedContent","allowedRole","Alert","administrator","normal","noLogged","Welcome","data","fetch","method","Login","emailFocus","setEmailFocus","passwordFocus","setPasswordFocus","password","setPassword","email","setEmail","isLogged","setIsLogged","$","hide","login","jsonData","getElementById","disabled","loginUser","JSON","stringify","then","response","json","result","show","text","catch","error","console","getUserRole","key","string_length","i","random_string","char","charAt","Math","floor","random","length","getRandomKey","encrypt","lg","Card","CardHeader","CardImg","alt","CardTitle","CardBody","Form","autoComplete","InputGroup","classnames","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","onFocus","onBlur","onChange","value","FormGroup","check","CardFooter","size","Register","fullNameFocus","setFullNameFocus","username","setUsername","isValidPwd","setIsValidPwd","isInvalidPwd","setIsInvalidPwd","isValidEmail","setIsValidEmail","isInvalidEmail","setIsInvalidEmail","showFeedback","setShowFeedback","validateInputs","pwd","valid","test","checkEmail","RegExp","register","registerUser","renderFeedback","input","success","FormFeedback","invalid","Title","AnalyzeHeader","headers","Analyze","percentageAttacksChart","typesChart","getModelInfo","getModelFormat","Error","message","column","log","ctx","Chart","labels","datasets","label","options","render","destroy","initializeCharts","update","fileField","querySelector","formData","FormData","append","files","innerHTML","uploadFile","parElement","Object","entries","textToAdd","createTextNode","appendChild","uploadCharts","dataset","resultsJSON","uploadPercentageChart","parse","uploadTypesChart","resultsData","count","dosAttacks","r2lAttacks","u2rAttacks","probingAttacks","dosValue","r2lValue","u2rValue","probingValue","includes","parseInt","labelsArray","finalValuesArray","backgroundColor","getColors","display","fontSize","fontColor","padding","legend","position","generateRandomNumber","min","max","colors","r","g","b","number","valuesArray","otherValue","sum","getPercentage","values","x","changeName","name","accept","htmlFor","style","marginLeft","textAlign","borderRadius","borderStyle","borderColor","width","height","AttackTypesInfoHeader","DOSInfo","R2LInfo","U2RInfo","AttackTypesInfo","ContactHeader","Contact","AboutHeader","About","AdminNavbar","goBack","AdminHeader","Admin","ModelInfo","checkModel","uploadFileForCheck","getTrainingModelData","modelData","autocomplete","defaultValue","readonly","class","for","Train","train","table","rowCount","rows","deleteRow","cleanTableAndAlerts","myObj","counter","lista","tr","createElement","columna","item","checkbox","checkPredictors","predictors","resume_table","predictorsCount","each","chk","checked","push","cells","innerText","setPredictors","prunning","getPrunningData","finishTrain","finishModelTrain","alert","Table","ModelHistory","getModelHistory","getTrainModelHistory","element","responsive","goUp","CreateUserForm","getUsers","getUserList","deleteButton","onclick","remove","selectButton","showUser","getUser","removeUser","modify","modifyUser","classname","create","createUser","App","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.c75f23ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/analyze1.0e539de1.jpg\";","export default __webpack_public_path__ + \"static/media/analyze2.0fb4f5cd.webp\";","export default __webpack_public_path__ + \"static/media/analyze3.db67d71c.jpg\";","export default __webpack_public_path__ + \"static/media/dos_attack.4b7d8470.webp\";","export default __webpack_public_path__ + \"static/media/probing_attack.98130884.png\";","export default __webpack_public_path__ + \"static/media/r2l_attack.1299affc.webp\";","export default __webpack_public_path__ + \"static/media/u2r_attack.105b6746.png\";","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nexport default function IndexNavbar() {\r\n\r\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\r\n  const [collapseOut, setCollapseOut] = React.useState(\"\");\r\n  const [color, setColor] = React.useState(\"navbar-transparent\");\r\n  \r\n  React.useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeColor);\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", changeColor);\r\n    };\r\n  },[]);\r\n\r\n  const changeColor = () => {\r\n    if (\r\n      document.documentElement.scrollTop > 99 ||\r\n      document.body.scrollTop > 99\r\n    ) {\r\n      setColor(\"bg-info\");\r\n    } else if (\r\n      document.documentElement.scrollTop < 100 ||\r\n      document.body.scrollTop < 100\r\n    ) {\r\n      setColor(\"navbar-transparent\");\r\n    }\r\n  };\r\n\r\n  const toggleCollapse = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setCollapseOpen(!collapseOpen);\r\n  };\r\n\r\n  const onCollapseExiting = () => {\r\n    setCollapseOut(\"collapsing-out\");\r\n  };\r\n\r\n  const onCollapseExited = () => {\r\n    setCollapseOut(\"\");\r\n  };\r\n\r\n  const smoothScroll = (e) => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  return (\r\n    <Navbar className={\"fixed-top bg-info\"} color-on-scroll=\"100\" expand=\"lg\">\r\n      <Container>\r\n        <div className=\"navbar-translate\">\r\n          <NavbarBrand to=\"/\" tag={Link} id=\"navbar-brand\" onClick={(e) => smoothScroll(e)}>\r\n            <span>DataScan </span>\r\n          </NavbarBrand>\r\n          <button\r\n            aria-expanded={collapseOpen}\r\n            className=\"navbar-toggler navbar-toggler\"\r\n            onClick={toggleCollapse}\r\n          >\r\n            <span className=\"navbar-toggler-bar bar1\" />\r\n            <span className=\"navbar-toggler-bar bar2\" />\r\n            <span className=\"navbar-toggler-bar bar3\" />\r\n          </button>\r\n        </div>\r\n        <Collapse\r\n          className={\"justify-content-end \" + collapseOut}\r\n          navbar\r\n          isOpen={collapseOpen}\r\n          onExiting={onCollapseExiting}\r\n          onExited={onCollapseExited}\r\n        >\r\n          <div className=\"navbar-collapse-header\">\r\n            <Row>\r\n              <Col className=\"collapse-brand\" xs=\"6\">\r\n                <a href=\"/\" onClick={(e) => smoothScroll(e)}>\r\n                  DataScan\r\n                </a>\r\n              </Col>\r\n              <Col className=\"collapse-close text-right\" xs=\"6\">\r\n                <button\r\n                  aria-expanded={collapseOpen}\r\n                  className=\"navbar-toggler\"\r\n                  onClick={toggleCollapse}\r\n                >\r\n                  <i className=\"tim-icons icon-simple-remove\" />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Nav navbar>\r\n            <NavItem className=\"p-0\">\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://twitter.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                title=\"Follow us on Twitter\"\r\n              >\r\n                <i className=\"fab fa-twitter\" />\r\n                <p className=\"d-lg-none d-xl-none\">Twitter</p>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"p-0\">\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://www.facebook.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                title=\"Like us on Facebook\"\r\n              >\r\n                <i className=\"fab fa-facebook-square\" />\r\n                <p className=\"d-lg-none d-xl-none\">Facebook</p>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"p-0\">\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://www.instagram.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                title=\"Follow us on Instagram\"\r\n              >\r\n                <i className=\"fab fa-instagram\" />\r\n                <p className=\"d-lg-none d-xl-none\">Instagram</p>\r\n              </NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"default\"\r\n                data-toggle=\"dropdown\"\r\n                href=\"/\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <i className=\"fa fa-cogs d-lg-none d-xl-none\" />\r\n                More options\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-with-icons\">\r\n                <DropdownItem tag={Link} to=\"/attacks_info\" onClick={(e) => smoothScroll()}>\r\n                  About attacks\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/contact\" onClick={(e) => smoothScroll()}>\r\n                  Contact us\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/about\">\r\n                  About us\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default function PageHeader() {\r\n  return (\r\n    <div className=\"page-header header-filter\">\r\n      <div className=\"squares square1\" />\r\n      <div className=\"squares square2\" />\r\n      <div className=\"squares square3\" />\r\n      <div className=\"squares square4\" />\r\n      <div className=\"squares square5\" />\r\n      <div className=\"squares square6\" />\r\n      <div className=\"squares square7\" />\r\n      <Container>\r\n        <div className=\"content-center brand\">\r\n          <h1 className=\"h1-seo\">DataScan</h1>\r\n          <h3 className=\"d-none d-sm-block\">\r\n            An Intrussion Detection Sistem (IDS) that analyzes your datasets in order to find cyberattacks\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nexport default function NoLoggedFooter() {\r\n\r\n  const smoothScroll = (e) => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <h1 className=\"title\">DataScan</h1>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <Nav>\r\n              <NavItem>\r\n                <NavLink to=\"/\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/login\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  Login\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/register\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n          \r\n          <Col md=\"3\">\r\n            <h3 className=\"title\">Follow us:</h3>\r\n            <div className=\"btn-wrapper profile\">\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://twitter.com/\"\r\n                id=\"tooltip622135962\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-twitter\" />\r\n              </Button>\r\n\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://www.facebook.com/\"\r\n                id=\"tooltip230450801\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-facebook-square\" />\r\n              </Button>\r\n\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://www.instagram.com/\"\r\n                id=\"tooltip230450801\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-instagram\" />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Label,\r\n    UncontrolledCarousel,\r\n} from \"reactstrap\";\r\n\r\nconst carouselItems = [\r\n    {\r\n        src: require(\"assets/img/analyze1.jpg\").default,\r\n        altText: \"Slide 1\",\r\n    },\r\n    {\r\n        src: require(\"assets/img/analyze2.webp\").default,\r\n        altText: \"Slide 2\",\r\n    },\r\n    {\r\n        src: require(\"assets/img/analyze3.jpg\").default,\r\n        altText: \"Slide 3\",\r\n    },\r\n];\r\n\r\nexport default function Basics() {\r\n    const navigate = useNavigate();\r\n\r\n    const analyze = (e) => {\r\n        e.preventDefault();\r\n        navigate('/analyze');\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <Container className=\"align-items-center\">\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md=\"6\">\r\n                        <Label className=\"text-on-back\">Analyze</Label>\r\n                        <p className=\"profile-description text-left\">\r\n                        By using a trained Machine Learning model, we can classify your data in order to \r\n                        tell which are the classify your data in order to tell which are the infiltrations \r\n                        you have had. infiltrations you have had. \r\n                        <br/>\r\n                        To do so, you only need to provide us with a dataset with the data we specify\r\n                        </p>\r\n                        <div className=\"btn-wrapper pt-3\">\r\n                            <Button className=\"btn-simple\" color=\"primary\" onClick={(e) => analyze(e)} >\r\n                                Analyze data\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"5\">\r\n                        <Row className=\"justify-content-between align-items-center\">\r\n                            <UncontrolledCarousel items={carouselItems} />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// core components\r\nimport LoginNavbar from \"components/Navbars/LoginNavBar.js\";\r\nimport PageHeader from \"components/PageHeader/PageHeader.js\";\r\nimport NoLoggedFooter from \"components/Footer/NoLoggedFooter.js\";\r\n\r\n// sections for this page/view\r\nimport AnalyzeInfo from \"views/IndexSections/AnalyzeInfo.js\";\r\n\r\n\r\nexport default function Index() {\r\n  React.useEffect(() => {\r\n    document.body.classList.toggle(\"index-page\");\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.toggle(\"index-page\");\r\n    };\r\n  },[]);\r\n  return (\r\n    <>\r\n      <LoginNavbar />\r\n      <div className=\"wrapper\">\r\n        <PageHeader />\r\n        <div className=\"main\">\r\n          <AnalyzeInfo />\r\n        </div>\r\n        <NoLoggedFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","//Roles for the logged user\r\nexport const ROLES = {\r\n    administrator: \"administrator\",\r\n    normal: \"normal\",\r\n    noLogged: \"no-logged\"\r\n};\r\n\r\n//Definition of the different access levels for the pages\r\nexport const SCOPES = {\r\n    administratorCanAccess: \"administrator-can-access\",\r\n    normalCanAccess: \"normal-can-access\",\r\n    noLoggedCanAccess: \"no-logged-can-access\"\r\n};\r\n\r\n//Assignations of the scopes each role has access to\r\nexport const PERMISSIONS = {\r\n    [ROLES.administrator]: [SCOPES.administratorCanAccess],\r\n    [ROLES.normal]: [SCOPES.normalCanAccess],\r\n    [ROLES.noLogged]: [SCOPES.noLoggedCanAccess]\r\n};","import { PERMISSIONS } from \"./PermissionsMap\"\r\nimport { AES, enc } from 'crypto-js';\r\n\r\nconst hasPermission = ({ permissions, scopes }) => {\r\n    const scopesMap = {};\r\n    scopes.forEach((scope) => {\r\n        scopesMap[scope] = true;\r\n    });\r\n\r\n    return permissions.some((permission) => scopesMap[permission]);\r\n};\r\n\r\nexport default function PermissionsGate({\r\n    children,\r\n    RenderForbiddenContent = () => <></>,\r\n    scopes = []\r\n}) {\r\n\r\n    let role = 'no-logged';\r\n    let roleKey = sessionStorage.getItem(\"VALUE\");\r\n    // If user is not logged in, set role as 'no-logged'\r\n    if (roleKey !== null) {\r\n        if (sessionStorage.getItem(\"userRole\") !== 'no-logged')\r\n            role = AES.decrypt(sessionStorage.getItem(\"userRole\"), roleKey).toString(enc.Utf8);\r\n    }\r\n\r\n    const permissions = PERMISSIONS[role];\r\n\r\n    const permissionGranted = hasPermission({ permissions, scopes });\r\n\r\n    if (!permissionGranted) return <><RenderForbiddenContent /></>\r\n\r\n    return <>{children}</>;\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nexport default function IndexNavbar() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\r\n  const [collapseOut, setCollapseOut] = React.useState(\"\");\r\n  const [color, setColor] = React.useState(\"navbar-transparent\");\r\n  \r\n  React.useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeColor);\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", changeColor);\r\n    };\r\n  },[]);\r\n\r\n  const changeColor = () => {\r\n    if (\r\n      document.documentElement.scrollTop > 99 ||\r\n      document.body.scrollTop > 99\r\n    ) {\r\n      setColor(\"bg-info\");\r\n    } else if (\r\n      document.documentElement.scrollTop < 100 ||\r\n      document.body.scrollTop < 100\r\n    ) {\r\n      setColor(\"navbar-transparent\");\r\n    }\r\n  };\r\n\r\n  const toggleCollapse = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setCollapseOpen(!collapseOpen);\r\n  };\r\n\r\n  const onCollapseExiting = () => {\r\n    setCollapseOut(\"collapsing-out\");\r\n  };\r\n\r\n  const onCollapseExited = () => {\r\n    setCollapseOut(\"\");\r\n  };\r\n\r\n  const smoothScroll = (e) => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  const analyze = (e) => {\r\n    e.preventDefault();\r\n    navigate('/analyze');\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  const goAdminPane = (e) => {\r\n    e.preventDefault();\r\n    navigate('/admin');\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n\r\n    sessionStorage.setItem(\"userRole\", 'no-logged')\r\n\r\n    navigate('/login');\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  return (\r\n    <Navbar className={\"fixed-top \" + color} color-on-scroll=\"100\" expand=\"lg\">\r\n      <Container>\r\n        <div className=\"navbar-translate\">\r\n          <NavbarBrand to=\"/welcome\" tag={Link} id=\"navbar-brand\" onClick={(e) => smoothScroll(e)}>\r\n            <span>DataScan </span>\r\n          </NavbarBrand>\r\n          <button\r\n            aria-expanded={collapseOpen}\r\n            className=\"navbar-toggler navbar-toggler\"\r\n            onClick={toggleCollapse}\r\n          >\r\n            <span className=\"navbar-toggler-bar bar1\" />\r\n            <span className=\"navbar-toggler-bar bar2\" />\r\n            <span className=\"navbar-toggler-bar bar3\" />\r\n          </button>\r\n        </div>\r\n        <Collapse\r\n          className={\"justify-content-end \" + collapseOut}\r\n          navbar\r\n          isOpen={collapseOpen}\r\n          onExiting={onCollapseExiting}\r\n          onExited={onCollapseExited}\r\n        >\r\n          <div className=\"navbar-collapse-header\">\r\n            <Row>\r\n              <Col className=\"collapse-brand\" xs=\"6\">\r\n                <a href=\"/welcome\" onClick={(e) => smoothScroll(e)}>\r\n                  DataScan\r\n                </a>\r\n              </Col>\r\n              <Col className=\"collapse-close text-right\" xs=\"6\">\r\n                <button\r\n                  aria-expanded={collapseOpen}\r\n                  className=\"navbar-toggler\"\r\n                  onClick={toggleCollapse}\r\n                >\r\n                  <i className=\"tim-icons icon-simple-remove\" />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Nav navbar>\r\n            <NavItem className=\"p-0\">\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://twitter.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                title=\"Follow us on Twitter\"\r\n              >\r\n                <i className=\"fab fa-twitter\" />\r\n                <p className=\"d-lg-none d-xl-none\">Twitter</p>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"p-0\">\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://www.facebook.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                title=\"Like us on Facebook\"\r\n              >\r\n                <i className=\"fab fa-facebook-square\" />\r\n                <p className=\"d-lg-none d-xl-none\">Facebook</p>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"p-0\">\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://www.instagram.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                title=\"Follow us on Instagram\"\r\n              >\r\n                <i className=\"fab fa-instagram\" />\r\n                <p className=\"d-lg-none d-xl-none\">Instagram</p>\r\n              </NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"default\"\r\n                data-toggle=\"dropdown\"\r\n                href=\"/\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <i className=\"fa fa-cogs d-lg-none d-xl-none\" />\r\n                More options\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-with-icons\">\r\n                <DropdownItem tag={Link} to=\"/attacks_info\" onClick={(e) => smoothScroll()}>\r\n                  About attacks\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/contact\" onClick={(e) => smoothScroll()}>\r\n                  Contact us\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/about\">\r\n                  About us\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <NavItem>\r\n              <Button\r\n                className=\"nav-link d-none d-lg-block\"\r\n                color=\"primary\"\r\n                onClick={(e) => analyze(e)}\r\n              >\r\n                <i className=\"tim-icons icon-zoom-split\" /> Analyze\r\n              </Button>\r\n            </NavItem>\r\n\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n            >\r\n\r\n            <NavItem>\r\n              <Button\r\n                className=\"nav-link d-none d-lg-block\"\r\n                color=\"success\"\r\n                onClick={(e) => goAdminPane(e)}\r\n              >\r\n                <i className=\"tim-icons icon-settings-gear-63\" /> Admin pane\r\n              </Button>\r\n            </NavItem>\r\n\r\n            </PermissionsGate>\r\n\r\n            <NavItem>\r\n              <Button\r\n                className=\"nav-link d-none d-lg-block\"\r\n                color=\"danger\"\r\n                onClick={(e) => logout(e)}\r\n              >\r\n                <i className=\"tim-icons icon-user-run\" /> Logout\r\n              </Button>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nexport default function Footer() {\r\n\r\n  const smoothScroll = (e) => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <h1 className=\"title\">DataScan</h1>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <Nav>\r\n              <NavItem>\r\n                <NavLink to=\"/welcome\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/analyze\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  Analyze\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <Nav>\r\n              <NavItem>\r\n                <NavLink to=\"/contact\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  Contact us\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/about\" tag={Link} onClick={(e) => smoothScroll(e)}>\r\n                  About us\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <h3 className=\"title\">Follow us:</h3>\r\n            <div className=\"btn-wrapper profile\">\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://twitter.com/\"\r\n                id=\"tooltip622135962\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-twitter\" />\r\n              </Button>\r\n\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://www.facebook.com/\"\r\n                id=\"tooltip230450801\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-facebook-square\" />\r\n              </Button>\r\n\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://www.instagram.com/\"\r\n                id=\"tooltip230450801\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-instagram\" />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Alert, Button } from \"reactstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Page used when a user tries to access a page not autorized\r\nconst RestrictedContent = ({ allowedRole }) => {\r\n\r\n    const mapAllowedRole = {\r\n        administrator: \"Admin\",\r\n        normal: \"normal\",\r\n        noLogged: \"Normal or Admin\"\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const redirectLogin = () => {\r\n        //window.location.href = '/login';\r\n        navigate('/login')\r\n    }\r\n\r\n    return (\r\n        <div id=\"error-page\">\r\n            <div className=\"content\">\r\n                <Alert >\r\n                    <h2 className=\"header\" data-text=\"403\"> 403 </h2>\r\n                    <h4 data-text=\"¡Contenido restringido!\">  ¡Restricted content! </h4>\r\n                    <hr />\r\n                    <p>\r\n                        To access to this page, you need to be loggin as: <b>{mapAllowedRole[allowedRole]}</b>\r\n                    </p>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => navigate('/login')} >Login</Button>\r\n                    </div>\r\n                </Alert>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RestrictedContent;","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// core components\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport PageHeader from \"components/PageHeader/PageHeader.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\n\r\n// sections for this page/view\r\nimport AnalyzeInfo from \"views/IndexSections/AnalyzeInfo.js\";\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\n\r\nexport default function Welcome() {\r\n  React.useEffect(() => {\r\n    document.body.classList.toggle(\"index-page\");\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.toggle(\"index-page\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <PermissionsGate\r\n        scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n        RenderForbiddenContent={() => <RestrictedContent allowedRole={\"noLogged\"} />}\r\n      >\r\n        <IndexNavbar />\r\n        <div className=\"wrapper\">\r\n          <PageHeader />\r\n          <div className=\"main\">\r\n            <AnalyzeInfo />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </PermissionsGate>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { AES } from 'crypto-js';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport $ from 'jquery';\r\n\r\nimport LoginNavbar from \"components/Navbars/LoginNavBar.js\"\r\n\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardImg,\r\n    CardTitle,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Label,\r\n    Alert,\r\n} from \"reactstrap\";\r\n\r\nfunction getRandomKey(string_length) {\r\n    var random_string = ''\r\n    var char = 'abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n    var i\r\n\r\n    for (i = 0; i < string_length; i++) {\r\n        random_string = random_string + char.charAt(Math.floor(Math.random() * char.length))\r\n    }\r\n    return random_string\r\n}\r\n\r\nasync function loginUser(data) {\r\n    return fetch('/loginUser', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\nasync function getUserRole(data) {\r\n    return fetch(`/getRole?email=${data['email']}`, {\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nexport default function Login() {\r\n\r\n\r\n    const [emailFocus, setEmailFocus] = React.useState(false);\r\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"index-page\");\r\n        $('.AlertContainer').hide()\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"index-page\");\r\n        };\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n\r\n        $('.AlertContainer').hide()\r\n\r\n        var jsonData = {\r\n            \"password\": password,\r\n            \"email\": email\r\n        }\r\n        document.getElementById(\"btn-login\").disabled = true;\r\n        loginUser(JSON.stringify(jsonData))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                document.getElementById(\"btn-login\").disabled = false;\r\n                if (result['message'] === 200) {\r\n                    if (result['login']) {\r\n                        setIsLogged(true)\r\n                    } else {\r\n                        $('.AlertContainer').show()\r\n                        $('.LoginAlert').text(\"Bad credentials. Try again...\")\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLogged) {\r\n\r\n            var data = {\r\n                \"email\": email\r\n            }\r\n\r\n            getUserRole(data)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    let key = getRandomKey(16);\r\n                    sessionStorage.setItem(\"VALUE\", key);\r\n                    sessionStorage.setItem(\"userRole\", AES.encrypt(result[\"role\"], key).toString());\r\n                    navigate('/welcome')\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    }, [isLogged, navigate, email])\r\n\r\n    const smoothScroll = (e) => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginNavbar />\r\n            <div className=\"wrapper\">\r\n                <div className=\"page-header\">\r\n                    <div className=\"page-header-image\" />\r\n                    <div className=\"content\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                                    <div\r\n                                        className=\"square square-7\"\r\n                                        id=\"square7\"\r\n                                    />\r\n                                    <div\r\n                                        className=\"square square-8\"\r\n                                        id=\"square8\"\r\n                                    />\r\n                                    <Card className=\"card-register\">\r\n                                        <CardHeader>\r\n                                            <CardImg\r\n                                                alt=\"...\"\r\n                                                src={require(\"assets/img/square1.png\").default}\r\n                                            />\r\n                                            <CardTitle tag=\"h4\">Login</CardTitle>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <Form className=\"form\" autoComplete=\"off\">\r\n                                                <InputGroup\r\n                                                    className={classnames({\r\n                                                        \"input-group-focus\": emailFocus,\r\n                                                    })}\r\n                                                >\r\n                                                    <InputGroupAddon addonType=\"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className=\"tim-icons icon-email-85\" />\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        placeholder=\"Email\"\r\n                                                        type=\"text\"\r\n                                                        onFocus={(e) => setEmailFocus(true)}\r\n                                                        onBlur={(e) => setEmailFocus(false)}\r\n                                                        onChange={e => setEmail(e.target.value)}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                <InputGroup\r\n                                                    className={classnames({\r\n                                                        \"input-group-focus\": passwordFocus,\r\n                                                    })}\r\n                                                >\r\n                                                    <InputGroupAddon addonType=\"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className=\"tim-icons icon-lock-circle\" />\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        placeholder=\"Password\"\r\n                                                        type=\"password\"\r\n                                                        onFocus={(e) => setPasswordFocus(true)}\r\n                                                        onBlur={(e) => setPasswordFocus(false)}\r\n                                                        onChange={e => setPassword(e.target.value)}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                                <FormGroup check className=\"text-right\">\r\n                                                    <Label check>\r\n                                                        Click {\" \"}\r\n                                                        <a\r\n                                                            href=\"#/register\"\r\n                                                            onClick={(e) => smoothScroll(e)}\r\n                                                        >\r\n                                                            here\r\n                                                        </a>\r\n                                                        {\" \"} to register.\r\n                                                    </Label>\r\n                                                </FormGroup>\r\n                                            </Form>\r\n                                        </CardBody>\r\n                                        <CardFooter>\r\n                                            <Button className=\"btn-round\" id=\"btn-login\" color=\"info\" size=\"lg\" onClick={(e) => login(e)}>\r\n                                                Login\r\n                                            </Button>\r\n                                            <div className=\"AlertContainer\">\r\n                                                <Alert className=\"LoginAlert\" color=\"danger\">\r\n                                                    <strong></strong>\r\n                                                </Alert >\r\n                                            </div>\r\n                                        </CardFooter>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nimport LoginNavBar from \"components/Navbars/LoginNavBar.js\"\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardImg,\r\n  CardTitle,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nasync function registerUser(data) {\r\n  return fetch('/registerUser', {\r\n    method: 'POST',\r\n    body: data\r\n  });\r\n};\r\n\r\n// Function to check whether the email introduced has the correct format\r\nfunction checkEmail(email) {\r\n  var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n  return emailPattern.test(email);\r\n}\r\n\r\n// Function to check whether the password introduced has the correct format\r\nfunction checkPassword(pwd) {\r\n  var strongPwdPattern = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\r\n  return strongPwdPattern.test(pwd);\r\n}\r\n\r\n\r\nexport default function Register() {\r\n\r\n  const [fullNameFocus, setFullNameFocus] = React.useState(false);\r\n  const [emailFocus, setEmailFocus] = React.useState(false);\r\n  const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n  const [username, setUsername] = useState('');\r\n\r\n  const [password, setPassword] = useState('');\r\n  // Variable to store if the pwd introduced is valid\r\n  const [isValidPwd, setIsValidPwd] = useState(false);\r\n  // Variable to store if the pwd introduced is invalid\r\n  const [isInvalidPwd, setIsInvalidPwd] = useState(false);\r\n\r\n  const [email, setEmail] = useState('');\r\n  // Variable to store if the email introduced is valid\r\n  const [isValidEmail, setIsValidEmail] = useState(false);\r\n  // Variable to store if the email introduced is invalid\r\n  const [isInvalidEmail, setIsInvalidEmail] = useState(false);\r\n\r\n  // Variable to show or not the feedback\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n\r\n  const passRequirements = `Password requirements:\r\n    Must have a minimum length of 8 characters\r\n    Must include 1 capital letter and 1 small letter\r\n    Must include 1 number\r\n    Must include 1 special char`\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.toggle(\"index-page\");\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.toggle(\"index-page\");\r\n    };\r\n  }, []);\r\n\r\n  const validateInputs = () => {\r\n    var valid = false\r\n    if (!checkEmail(email)) {\r\n      setShowFeedback(true);\r\n      setIsValidEmail(false);\r\n      setIsInvalidEmail(true);\r\n    } else if (!checkPassword(password)) {\r\n      setIsValidEmail(true);\r\n      setIsInvalidEmail(false);\r\n      setShowFeedback(true);\r\n      setIsValidPwd(false);\r\n      setIsInvalidPwd(true);\r\n    } else {\r\n      setIsValidEmail(true);\r\n      setIsInvalidEmail(false);\r\n      setIsValidPwd(true);\r\n      setIsInvalidPwd(false);\r\n      setShowFeedback(true);\r\n      valid = true\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    setShowFeedback(false);\r\n\r\n    var jsonData = {\r\n      \"username\": username,\r\n      \"password\": password,\r\n      \"email\": email\r\n    }\r\n\r\n    if (validateInputs()) {\r\n      document.getElementById(\"btn-register\").disabled = true;\r\n      document.getElementById(\"btn-login\").disabled = true;\r\n      registerUser(JSON.stringify(jsonData))\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          document.getElementById(\"btn-register\").disabled = false;\r\n          document.getElementById(\"btn-login\").disabled = false;\r\n          if (result['message'] === 200) {\r\n            navigate('/login');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const renderFeedback = (input, success, error) => {\r\n    return (input\r\n      ? <FormFeedback valid>\r\n        {success}\r\n      </FormFeedback>\r\n      : <FormFeedback invalid>\r\n        {error}\r\n      </FormFeedback>);\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const goLogin = (e) => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    navigate('/login');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LoginNavBar />\r\n      <div className=\"wrapper\">\r\n        <div className=\"main\">\r\n          <div className=\"section\">\r\n            <Container>\r\n              <Row>\r\n                <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                  <div\r\n                    className=\"square square-7\"\r\n                    id=\"square7\"\r\n                  />\r\n                  <div\r\n                    className=\"square square-8\"\r\n                    id=\"square8\"\r\n                  />\r\n                  <Card className=\"card-register\">\r\n                    <CardHeader>\r\n                      <CardImg\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/square1.png\").default}\r\n                      />\r\n                      <CardTitle tag=\"h4\">Register</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Form className=\"form\">\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": fullNameFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-single-02\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Username\"\r\n                            type=\"text\"\r\n                            onFocus={(e) => setFullNameFocus(true)}\r\n                            onBlur={(e) => setFullNameFocus(false)}\r\n                            onChange={e => setUsername(e.target.value)}\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": emailFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-email-85\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Email\"\r\n                            type=\"text\"\r\n                            onFocus={(e) => setEmailFocus(true)}\r\n                            onBlur={(e) => setEmailFocus(false)}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            valid={isValidEmail}\r\n                            invalid={isInvalidEmail}\r\n                          />\r\n                          {showFeedback ? renderFeedback(isValidEmail,\r\n                            \"Valid email.\", \"Invalid email.\") : null}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": passwordFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-lock-circle\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            onFocus={(e) => setPasswordFocus(true)}\r\n                            onBlur={(e) => setPasswordFocus(false)}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            valid={isValidPwd}\r\n                            invalid={isInvalidPwd}\r\n                            Title={passRequirements} />\r\n                          {showFeedback ? renderFeedback(isValidPwd,\r\n                            \"Valid password.\", \"Invalid password.\") : null}\r\n                        </InputGroup>\r\n\r\n                      </Form>\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      <Button className=\"btn-round\" color=\"info\" size=\"lg\" id=\"btn-register\" onClick={(e) => register(e)}>\r\n                        Register\r\n                      </Button>\r\n                      <Button className=\"btn-round\" color=\"info\" size=\"lg\" id=\"btn-login\" onClick={(e) => goLogin(e)}>\r\n                        Login\r\n                      </Button>\r\n                    </CardFooter>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default function AnalyzeHeader() {\r\n  return (\r\n    <div className=\"page-header header-filter\">\r\n      <div className=\"squares square1\" />\r\n      <div className=\"squares square2\" />\r\n      <div className=\"squares square3\" />\r\n      <div className=\"squares square4\" />\r\n      <div className=\"squares square5\" />\r\n      <div className=\"squares square6\" />\r\n      <div className=\"squares square7\" />\r\n      <Container>\r\n        <div className=\"content-center brand\">\r\n          <h1 className=\"h1-seo\">Analyze</h1>\r\n          <h3 className=\"d-none d-sm-block\">\r\n            Select a file in order to analyze it and detect all the cyberattacks it contains\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\"\r\nimport AnalyzeHeader from \"components/PageHeader/AnalyzeHeader.js\"\r\nimport Footer from \"components/Footer/Footer.js\"\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport Chart from \"chart.js\"\r\nimport $ from 'jquery'\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Form,\r\n    Alert,\r\n} from \"reactstrap\";\r\n\r\nasync function uploadFile(data) {\r\n    return fetch('/analyze', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\nasync function getModelFormat() {\r\n    return fetch('/getModelFormat', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport default function Analyze() {\r\n\r\n    var percentageAttacksChart\r\n    var typesChart\r\n\r\n\r\n    const getModelInfo = (e) => {\r\n\r\n        $('.DatasetFormatAlert').hide()\r\n\r\n        getModelFormat()\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result['message'] === 200) {\r\n                    $('.DatasetFormatAlert').show()\r\n                    var text = \"\"\r\n                    result[\"modelFormat\"].forEach(function (column) {\r\n                        if(column !== 'class'){\r\n                            text += column + \", \"\r\n                        } \r\n                    })\r\n                    $('.DatasetFormatAlert').text(\"File must have only this colums: \" + text);\r\n                } else {\r\n                    throw Error(result.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            });\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"index-page\");\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        $('.AlertContainer').hide()\r\n        $('.DatasetFormatAlert').hide()\r\n        getModelInfo()\r\n\r\n        const initializeCharts = () => {\r\n            var ctx = document.getElementById('percentageChart');\r\n\r\n            if (ctx != null) {\r\n                // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                percentageAttacksChart = new Chart(ctx, {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets: [{\r\n                            label: '# of Votes',\r\n                            data: [12, 19, 3, 5, 2, 3]\r\n                        }]\r\n                    },\r\n                    options: {}\r\n                });\r\n\r\n                percentageAttacksChart.render();\r\n                percentageAttacksChart.destroy();\r\n            }\r\n\r\n            ctx = document.getElementById('typesChart')\r\n\r\n            if (ctx != null) {\r\n                // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                typesChart = new Chart(ctx, {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets: [{\r\n                            label: '# of Votes',\r\n                            data: [12, 19, 3, 5, 2, 3]\r\n                        }]\r\n                    },\r\n                    options: {}\r\n                });\r\n\r\n                typesChart.render();\r\n                typesChart.destroy();\r\n            }\r\n        }\r\n\r\n        initializeCharts()\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"profile-page\");\r\n            document.body.classList.toggle(\"index-page\");\r\n            $('.AlertContainer').hide()\r\n            $('.DatasetFormatAlert').hide()\r\n        };\r\n    }, []);\r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n\r\n        $('.AlertContainer').show()\r\n\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n        const formData = new FormData();\r\n        formData.append('file', fileField.files[0]);\r\n\r\n        //Disable components\r\n        $('.AnalyzeAlert').text(\"Analyzing dataset, wait...\")\r\n        document.getElementById(\"btn-analyze\").disabled = true;\r\n        document.getElementById(\"file\").disabled = true;\r\n        document.getElementById(\"resultData\").innerHTML = \"\";\r\n        //document.getElementById(\"btn-analyze\").style.cursor = \"wait\"\r\n\r\n        //Check if file type is .csv\r\n        if (fileField.files[0]['type'] !== 'text/csv') {\r\n            $('.AlertContainer').show()\r\n            $('.AnalyzeAlert').text(\"File must be .csv format!\")\r\n\r\n            //Enable components\r\n            document.getElementById(\"file\").disabled = false;\r\n            document.getElementById(\"btn-analyze\").disabled = false;\r\n            document.getElementById(\"resultData\").innerHTML = \"\";\r\n\r\n            return\r\n        }\r\n\r\n        uploadFile(formData)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result['message'] === 200) {\r\n\r\n                    $('.AnalyzeAlert').text(\"Analysis complete. See results below.\")\r\n\r\n                    document.getElementById(\"btn-analyze\").disabled = false;\r\n                    document.getElementById(\"file\").disabled = false;\r\n\r\n                    var parElement = document.getElementById(\"resultData\");\r\n\r\n                    var text = \"\"\r\n                    for (const [key, value] of Object.entries(result['predicts'])) {\r\n                        text = text + key + \" --> \" + value + \"\\n\"\r\n                    }\r\n\r\n                    var textToAdd = document.createTextNode(text);\r\n                    parElement.appendChild(textToAdd);\r\n\r\n                    uploadCharts(result['predicts'])\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                document.getElementById(\"btn-analyze\").disabled = false;\r\n                document.getElementById(\"file\").disabled = false;\r\n                //document.getElementById(\"btn-analyze\").style.cursor = \"auto\"\r\n            });\r\n    }\r\n\r\n    const changeName = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n        var x = document.getElementById(\"labelFile\");\r\n        if (fileField.files[0])\r\n            x.innerHTML = fileField.files[0]['name']\r\n    }\r\n\r\n    const results = {\r\n        marginLeft: \"15px\",\r\n        padding: \"15px\",\r\n        textAlign: \"left\",\r\n        borderRadius: \"15px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#ffffff\"\r\n    }\r\n\r\n    const getPercentage = (dataset) => {\r\n        let valuesArray = dataset\r\n        var sum = 0;\r\n\r\n        for (var i in valuesArray) { // we find the total here\r\n            sum += parseInt(valuesArray[i])\r\n        }\r\n\r\n        var count = 0;\r\n        valuesArray.forEach(function (number) {\r\n            valuesArray[count] = (number / sum) * 100\r\n            count = count + 1\r\n        })\r\n\r\n        return valuesArray\r\n    }\r\n\r\n    const uploadCharts = (dataset) => {\r\n\r\n        const resultsJSON = JSON.stringify(dataset);\r\n\r\n        uploadPercentageChart(JSON.parse(resultsJSON))\r\n        uploadTypesChart(JSON.parse(resultsJSON))\r\n\r\n        console.log(dataset)\r\n    }\r\n\r\n    const uploadTypesChart = (resultsData) => {\r\n        var dataset = resultsData\r\n        var ctx = document.getElementById('typesChart');\r\n\r\n        var count = 0\r\n\r\n        var dosAttacks = [\"back\", \"land\", \"neptune\", \"pod\", \"smurf\", \"teardrop\"]\r\n        var r2lAttacks = [\"ftp_write\", \"guess_passwd\", \"imap\", \"multihop\", \"phf\", \"warezclient\", \"warezmaster\"]\r\n        var u2rAttacks = [\"buffer_overflow\", \"loadmodule\", \"perl\", \"rootkit\"]\r\n        var probingAttacks = [\"ipsweep\", \"nmap\", \"porstweep\", \"satan\"]\r\n\r\n        var dosValue = 0\r\n        var r2lValue = 0\r\n        var u2rValue = 0\r\n        var probingValue = 0\r\n\r\n        for (const [key, value] of Object.entries(dataset)) {\r\n            if (dosAttacks.includes(key)) {\r\n                dosValue += parseInt(value)\r\n            } else if (r2lAttacks.includes(key)) {\r\n                r2lValue += parseInt(value)\r\n            } else if (u2rAttacks.includes(key)) {\r\n                u2rValue += parseInt(value)\r\n            } else if (probingAttacks.includes(key)) {\r\n                probingValue += parseInt(value)\r\n            }\r\n            delete dataset[key]\r\n            count = count + 1\r\n        }\r\n        dataset[\"DOS attacks\"] = dosValue\r\n        dataset[\"R2L attacks\"] = r2lValue\r\n        dataset[\"U2R attacks\"] = u2rValue\r\n        dataset[\"Probing attacks\"] = probingValue\r\n\r\n        console.log(dataset)\r\n\r\n        const labelsArray = []\r\n        const finalValuesArray = []\r\n        count = 0\r\n        for (const [key, value] of Object.entries(dataset)) {\r\n            finalValuesArray[count] = value\r\n            labelsArray[count] = key\r\n            count = count + 1\r\n        }\r\n\r\n        const data = {\r\n            datasets: [{\r\n                data: finalValuesArray,\r\n                backgroundColor: getColors(labelsArray)\r\n            }],\r\n\r\n            // These labels appear in the legend and in the tooltips when hovering different arcs\r\n            labels: labelsArray\r\n        };\r\n\r\n        if (typesChart != null) {\r\n            typesChart.destroy();\r\n        }\r\n\r\n        typesChart = new Chart(ctx, {\r\n            data: data,\r\n            type: 'doughnut',\r\n            options: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Attacks by type',\r\n                    fontSize: '18',\r\n                    fontColor: '#fff',\r\n                    padding: '20',\r\n                },\r\n                legend: {\r\n                    position: 'bottom'\r\n                }\r\n            }\r\n        });\r\n\r\n        typesChart.render()\r\n\r\n    }\r\n\r\n    const generateRandomNumber = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    };\r\n\r\n    const getColors = (labelsArray) => {\r\n        var colors = []\r\n\r\n        var count = 0\r\n        var r = generateRandomNumber(100, 200),\r\n            g = generateRandomNumber(100, 200),\r\n            b = generateRandomNumber(100, 200)\r\n        var a = 0.8\r\n        labelsArray.forEach(function (number) {\r\n            colors[count] = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')'\r\n            r = generateRandomNumber(100, 200)\r\n            g = generateRandomNumber(100, 200)\r\n            b = generateRandomNumber(100, 200)\r\n            count = count + 1\r\n        })\r\n\r\n        return colors\r\n    }\r\n\r\n    const uploadPercentageChart = (resultsData) => {\r\n\r\n        var dataset = resultsData\r\n\r\n        var ctx = document.getElementById('percentageChart');\r\n\r\n        var count = 0\r\n        var valuesArray = []\r\n        var otherValue = 0\r\n\r\n        valuesArray = getPercentage(Object.values(dataset))\r\n        for (const [key] of Object.entries(dataset)) {\r\n            if (valuesArray[count] < 1) {\r\n                otherValue += valuesArray[count]\r\n                delete dataset[key]\r\n            } else {\r\n                dataset[key] = valuesArray[count]\r\n            }\r\n            count = count + 1\r\n        }\r\n        dataset[\"other attacks\"] = otherValue\r\n\r\n        const labelsArray = []\r\n        const finalValuesArray = []\r\n        count = 0\r\n        for (const [key, value] of Object.entries(dataset)) {\r\n            finalValuesArray[count] = value\r\n            labelsArray[count] = key\r\n            count = count + 1\r\n        }\r\n\r\n        const data = {\r\n            datasets: [{\r\n                data: finalValuesArray,\r\n                backgroundColor: getColors(labelsArray)\r\n            }],\r\n\r\n            // These labels appear in the legend and in the tooltips when hovering different arcs\r\n            labels: labelsArray\r\n        };\r\n\r\n        if (percentageAttacksChart != null) {\r\n            percentageAttacksChart.destroy();\r\n        }\r\n\r\n        percentageAttacksChart = new Chart(ctx, {\r\n            data: data,\r\n            type: 'doughnut',\r\n            options: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Attacks percentage',\r\n                    fontSize: '18',\r\n                    fontColor: '#fff',\r\n                    padding: '20',\r\n                },\r\n                legend: {\r\n                    position: 'bottom'\r\n                }\r\n            }\r\n        });\r\n\r\n        percentageAttacksChart.render()\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"noLogged\"} />}\r\n            >\r\n                <IndexNavbar />\r\n                <div className=\"wrapper\">\r\n                    <AnalyzeHeader />\r\n                    <div className=\"main\">\r\n                        <div className=\"section section-basic\" id=\"basic-elements\">\r\n                            <Container >\r\n                                <Row >\r\n                                    <Col md=\"10\">\r\n                                        <Card className=\"card-plain\">\r\n                                            <CardHeader>\r\n                                                <h1 className=\"profile-title text-left\">Select a file</h1>\r\n                                                <h5 className=\"text-on-back\">ANALYZE</h5>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <Alert className=\"DatasetFormatAlert\" color=\"info\">\r\n                                                    <strong></strong>\r\n                                                </Alert >\r\n                                                <Form>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div id=\"fileSelector\" className=\"custom-file\">\r\n                                                            <input onChange={(e) => changeName(e)} type=\"file\" className=\"custom-file-input\" name=\"file\" id=\"file\" accept=\".csv\" />\r\n                                                            <label id=\"labelFile\" className=\"custom-file-label\" htmlFor=\"file\">\r\n                                                                Select a file...\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <button type=\"submit\" id=\"btn-analyze\" className=\"btn btn-info\" onClick={(e) => update(e)}>\r\n                                                        Analyze\r\n                                                    </button>\r\n                                                </Form>\r\n                                                <div className=\"AlertContainer\">\r\n                                                    <Alert className=\"AnalyzeAlert\" color=\"info\">\r\n                                                        <strong></strong>\r\n                                                    </Alert >\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                            <section className=\"section section-lg\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card className=\"card-plain\">\r\n                                                <CardHeader>\r\n                                                    <h1 className=\"profile-title text-left\">Analyze data</h1>\r\n                                                    <h5 className=\"text-on-back\">RESULTS</h5>\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    <div className=\"results\" style={results}>\r\n                                                        <pre id=\"resultData\">\r\n                                                        </pre>\r\n                                                    </div>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </section>\r\n                            <div className=\"section section-nucleo-icons\">\r\n                                <Container>\r\n                                    <Row md=\"12\">\r\n                                        <Col md=\"6\">\r\n                                            <div className=\"percentages\">\r\n                                                <canvas id=\"percentageChart\" width=\"100\" height=\"100\"></canvas>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"6\">\r\n                                            <div className=\"types\">\r\n                                                <canvas id=\"typesChart\" width=\"100\" height=\"100\"></canvas>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </PermissionsGate>\r\n        </>\r\n    );\r\n};","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default function AttackTypesInfoHeader() {\r\n  return (\r\n    <div className=\"page-header header-filter\">\r\n      <div className=\"squares square1\" />\r\n      <div className=\"squares square2\" />\r\n      <div className=\"squares square3\" />\r\n      <div className=\"squares square4\" />\r\n      <div className=\"squares square5\" />\r\n      <div className=\"squares square6\" />\r\n      <div className=\"squares square7\" />\r\n      <Container>\r\n        <div className=\"content-center brand\">\r\n          <h1 className=\"h1-seo\">Cyberattacks</h1>\r\n          <h3 className=\"d-none d-sm-block\">\r\n            A brief summary of some of the most famous types of attacks and what they consist of\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Label,\r\n    UncontrolledCarousel,\r\n} from \"reactstrap\";\r\n\r\nconst carouselItems = [\r\n    {\r\n        src: require(\"assets/img/dos_attack.webp\").default,\r\n        altText: \"Slide 1\",\r\n    }\r\n];\r\n\r\nexport default function DOSInfo() {\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <Container className=\"align-items-center\">\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md=\"6\">\r\n                        <Label className=\"text-on-back\">DOS</Label>\r\n                        <p className=\"profile-description text-left mb-0\">\r\n                        Denial of Service (DoS): It occurs when an attacker attempts to deny legitimate \r\n                        users access to a particular service or resource. access to a particular service or resource. \r\n                        <br />\r\n                        Examples: back, land, neptune, pod, smurf or teardrop.\r\n                        </p>\r\n                    </Col>\r\n                    <Col md=\"5\">\r\n                        <Row className=\"justify-content-between align-items-center\">\r\n                            <UncontrolledCarousel items={carouselItems} />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Label,\r\n    UncontrolledCarousel,\r\n} from \"reactstrap\";\r\n\r\nconst carouselItems = [\r\n    {\r\n        src: require(\"assets/img/probing_attack.png\").default,\r\n        altText: \"Slide 1\",\r\n    }\r\n];\r\n\r\nexport default function Basics() {\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <Container >\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md=\"5\">\r\n                        <Row className=\"justify-content-between align-items-center\">\r\n                            <UncontrolledCarousel items={carouselItems} />\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Label className=\"text-on-back\">Probe</Label>\r\n                        <p className=\"profile-description text-left\">\r\n                        Probe: It occurs when an attacker scans a network to gather information or \r\n                        find known vulnerabilities that will allow him to find known vulnerabilities \r\n                        that allow him to hack the entire network. \r\n                        <br/>\r\n                        Examples: ipsweep, nmap, portsweep or satan.\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Label,\r\n    UncontrolledCarousel,\r\n} from \"reactstrap\";\r\n\r\nconst carouselItems = [\r\n    {\r\n        src: require(\"assets/img/r2l_attack.webp\").default,\r\n        altText: \"Slide 1\",\r\n    }\r\n];\r\n\r\nexport default function R2LInfo() {\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <Container className=\"align-items-center\">\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md=\"6\">\r\n                        <Label className=\"text-on-back\">R2L</Label>\r\n                        <p className=\"profile-description text-left\">\r\n                        Remote to Local (r2l): It occurs when an attacker wants to gain unauthorized access to \r\n                        a victim hacine in the entire network.\r\n                        <br/>\r\n                        Examples: ftp_write, guess_passwd, imap, multihop, phf, spy, warezclient or warezmaster.\r\n                        </p>\r\n                    </Col>\r\n                    <Col md=\"5\">\r\n                        <Row className=\"justify-content-between align-items-center\">\r\n                            <UncontrolledCarousel items={carouselItems} />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Label,\r\n    UncontrolledCarousel,\r\n} from \"reactstrap\";\r\n\r\nconst carouselItems = [\r\n    {\r\n        src: require(\"assets/img/u2r_attack.png\").default,\r\n        altText: \"Slide 1\",\r\n    }\r\n];\r\n\r\nexport default function U2RInfo() {\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <Container className=\"align-items-center\">\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md=\"5\">\r\n                        <Row className=\"justify-content-between align-items-center\">\r\n                            <UncontrolledCarousel items={carouselItems} />\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Label className=\"text-on-back\">U2R</Label>\r\n                        <p className=\"profile-description text-left\">\r\n                        User to Root (u2r): It occurs when a normal system user illegally \r\n                        accesses root or superuser privileges. root or superuser privileges. \r\n                        <br/>\r\n                        Examples: buffer_overflow, loadmodule, perl or rootkit.\r\n                        </p>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\"\r\nimport LoginNavBar from \"components/Navbars/LoginNavBar\"\r\nimport Footer from \"components/Footer/Footer.js\"\r\nimport NoLoggedFooter from \"components/Footer/NoLoggedFooter.js\"\r\n\r\nimport AttackTypesInfoHeaderHeader from \"components/PageHeader/AttackTypesInfoHeader.js\"\r\nimport DosInfo from \"views/AttacksSections/DOSInfo.js\"\r\nimport ProbeInfo from \"views/AttacksSections/ProbeInfo.js\"\r\nimport R2LInfo from \"views/AttacksSections/R2LInfo.js\"\r\nimport U2RInfo from \"views/AttacksSections/U2RInfo.js\"\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\n\r\n\r\n\r\nimport {\r\n    Container,\r\n} from \"reactstrap\";\r\n\r\nexport default function AttackTypesInfo() {\r\n\r\n    React.useEffect(() => {\r\n\r\n        document.body.classList.toggle(\"profile-page\");\r\n        document.body.classList.toggle(\"index-page\");\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"profile-page\");\r\n            document.body.classList.toggle(\"index-page\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n            >\r\n                <IndexNavbar />\r\n            </PermissionsGate>\r\n\r\n            <PermissionsGate\r\n                scopes={[SCOPES.noLoggedCanAccess]}\r\n            >\r\n                <LoginNavBar />\r\n            </PermissionsGate>\r\n\r\n            <div className=\"wrapper\">\r\n                <AttackTypesInfoHeaderHeader />\r\n                <div className=\"main\">\r\n                    <div className=\"section section-basic\" id=\"basic-elements\">\r\n                        <Container >\r\n                            <DosInfo />\r\n                            <ProbeInfo />\r\n                            <R2LInfo />\r\n                            <U2RInfo />\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <PermissionsGate\r\n                    scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n                >\r\n                    <Footer />\r\n                </PermissionsGate>\r\n\r\n                <PermissionsGate\r\n                    scopes={[SCOPES.noLoggedCanAccess]}\r\n                >\r\n                    <NoLoggedFooter />\r\n                </PermissionsGate>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default function ContactHeader() {\r\n  return (\r\n    <div className=\"page-header header-filter\">\r\n      <div className=\"squares square1\" />\r\n      <div className=\"squares square2\" />\r\n      <div className=\"squares square3\" />\r\n      <div className=\"squares square4\" />\r\n      <div className=\"squares square5\" />\r\n      <div className=\"squares square6\" />\r\n      <div className=\"squares square7\" />\r\n      <Container>\r\n        <div className=\"content-center brand\">\r\n          <h1 className=\"h1-seo\">Contact us</h1>\r\n          <h3 className=\"d-none d-sm-block\">\r\n          Contact us if you have doubts, problems, or any idea\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\n\r\nimport ContactHeader from \"components/PageHeader/ContactHeader.js\"\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\"\r\nimport LoginNavBar from \"components/Navbars/LoginNavBar\"\r\nimport Footer from \"components/Footer/Footer.js\"\r\nimport NoLoggedFooter from \"components/Footer/NoLoggedFooter.js\"\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Label,\r\n} from \"reactstrap\";\r\n\r\nexport default function Contact() {\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"profile-page\");\r\n        document.body.classList.toggle(\"index-page\");\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"profile-page\");\r\n            document.body.classList.toggle(\"index-page\");\r\n\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n            >\r\n                <IndexNavbar />\r\n            </PermissionsGate>\r\n\r\n            <PermissionsGate\r\n                scopes={[SCOPES.noLoggedCanAccess]}\r\n            >\r\n                <LoginNavBar />\r\n            </PermissionsGate>\r\n\r\n            <div className=\"wrapper\">\r\n                <ContactHeader />\r\n                <div className=\"main\">\r\n                    <div className=\"section section-basic\" id=\"basic-elements\">\r\n                        <section className=\"section\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col md=\"8\">\r\n                                        <Card className=\"card-plain\">\r\n                                            <CardHeader>\r\n                                                <h1 className=\"profile-title text-left\">Contact data</h1>\r\n                                                <h5 className=\"text-on-back\">CONTACT</h5>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <Row className=\"justify-content-between\">\r\n                                                    <Col>\r\n                                                        <p className=\"profile-description text-left mb-0\">\r\n                                                            \r\n                                                            Contact-email: datascan.contacto@gmail.com\r\n                                                        </p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </Container>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n\r\n                <PermissionsGate\r\n                    scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n                >\r\n                    <Footer />\r\n                </PermissionsGate>\r\n\r\n                <PermissionsGate\r\n                    scopes={[SCOPES.noLoggedCanAccess]}\r\n                >\r\n                    <NoLoggedFooter />\r\n                </PermissionsGate>\r\n            </div>\r\n        </>\r\n    );\r\n};","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default function AboutHeader() {\r\n  return (\r\n    <div className=\"page-header header-filter\">\r\n      <div className=\"squares square1\" />\r\n      <div className=\"squares square2\" />\r\n      <div className=\"squares square3\" />\r\n      <div className=\"squares square4\" />\r\n      <div className=\"squares square5\" />\r\n      <div className=\"squares square6\" />\r\n      <div className=\"squares square7\" />\r\n      <Container>\r\n        <div className=\"content-center brand\">\r\n          <h1 className=\"h1-seo\">About us</h1>\r\n          <h3 className=\"d-none d-sm-block\">\r\n            Get to know us better\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\n\r\nimport AboutHeader from \"components/PageHeader/AboutHeader.js\"\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\"\r\nimport LoginNavBar from \"components/Navbars/LoginNavBar\"\r\nimport Footer from \"components/Footer/Footer.js\"\r\nimport NoLoggedFooter from \"components/Footer/NoLoggedFooter.js\"\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\n\r\nexport default function About() {\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"profile-page\");\r\n        document.body.classList.toggle(\"index-page\");\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"profile-page\");\r\n            document.body.classList.toggle(\"index-page\");\r\n\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n            >\r\n                <IndexNavbar />\r\n            </PermissionsGate>\r\n\r\n            <PermissionsGate\r\n                scopes={[SCOPES.noLoggedCanAccess]}\r\n            >\r\n                <LoginNavBar />\r\n            </PermissionsGate>\r\n\r\n            <div className=\"wrapper\">\r\n                <AboutHeader />\r\n                <div className=\"main\">\r\n                    <div className=\"section section-basic\" id=\"basic-elements\">\r\n                        <section className=\"section\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col md=\"8\">\r\n                                        <Card className=\"card-plain\">\r\n                                            <CardHeader>\r\n                                                <h1 className=\"profile-title text-left\">Presentation</h1>\r\n                                                <h5 className=\"text-on-back\">About us</h5>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <Row className=\"justify-content-between\">\r\n                                                    <Col>\r\n                                                        <p className=\"profile-description text-left mb-0\">         \r\n                                                        The DataScan project was born in 2022 as a computer engineering degree final \r\n                                                        project. Its main objective is to provide a tool that helps users to detect \r\n                                                        cyber-attacks in their datasets.\r\n                                                        <br/><br/>\r\n                                                        Lucas Gutiérrez is the developer of the project. He studied at the School of\r\n                                                        Computer Science of Ciudad Real, Spain. He specialized in Software Engineering.\r\n                                                        <br/><br/>\r\n                                                        In the future, this project may have different orientations: \r\n                                                        <br/>\r\n                                                        1. To provide a multipurpose tool to train different machine \r\n                                                        learning models. \r\n                                                        <br/>\r\n                                                        2. To convert this IDS system into an IPS system.\r\n                                                        </p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </Container>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n\r\n                <PermissionsGate\r\n                    scopes={[SCOPES.administratorCanAccess, SCOPES.normalCanAccess]}\r\n                >\r\n                    <Footer />\r\n                </PermissionsGate>\r\n\r\n                <PermissionsGate\r\n                    scopes={[SCOPES.noLoggedCanAccess]}\r\n                >\r\n                    <NoLoggedFooter />\r\n                </PermissionsGate>\r\n            </div>\r\n        </>\r\n    );\r\n};","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\n\r\nexport default function AdminNavbar() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\r\n  const [collapseOut, setCollapseOut] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n\r\n    return function cleanup() {\r\n\r\n    };\r\n  }, []);\r\n\r\n  const toggleCollapse = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setCollapseOpen(!collapseOpen);\r\n  };\r\n\r\n  const onCollapseExiting = () => {\r\n    setCollapseOut(\"collapsing-out\");\r\n  };\r\n\r\n  const onCollapseExited = () => {\r\n    setCollapseOut(\"\");\r\n  };\r\n\r\n  const smoothScroll = (e) => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  const goBack = (e) => {\r\n    e.preventDefault();\r\n    navigate('/welcome');\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  return (\r\n    <Navbar className={\"fixed-top bg-info\"} color-on-scroll=\"100\" expand=\"lg\">\r\n      <Container>\r\n        <div className=\"navbar-translate\">\r\n          <NavbarBrand to=\"/admin\" tag={Link} id=\"navbar-brand\" onClick={(e) => smoothScroll(e)}>\r\n            <span>DataScan - Admin pane</span>\r\n          </NavbarBrand>\r\n          <button\r\n            aria-expanded={collapseOpen}\r\n            className=\"navbar-toggler navbar-toggler\"\r\n            onClick={toggleCollapse}\r\n          >\r\n            <span className=\"navbar-toggler-bar bar1\" />\r\n            <span className=\"navbar-toggler-bar bar2\" />\r\n            <span className=\"navbar-toggler-bar bar3\" />\r\n          </button>\r\n        </div>\r\n        <Collapse\r\n          className={\"justify-content-end \" + collapseOut}\r\n          navbar\r\n          isOpen={collapseOpen}\r\n          onExiting={onCollapseExiting}\r\n          onExited={onCollapseExited}\r\n        >\r\n          <div className=\"navbar-collapse-header\">\r\n            <Row>\r\n              <Col className=\"collapse-brand\" xs=\"6\">\r\n                <a href=\"/welcome\" onClick={(e) => smoothScroll(e)}>\r\n                  DataScan\r\n                </a>\r\n              </Col>\r\n              <Col className=\"collapse-close text-right\" xs=\"6\">\r\n                <button\r\n                  aria-expanded={collapseOpen}\r\n                  className=\"navbar-toggler\"\r\n                  onClick={toggleCollapse}\r\n                >\r\n                  <i className=\"tim-icons icon-simple-remove\" />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Nav navbar>\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"primary\"\r\n                data-toggle=\"dropdown\"\r\n                href=\"/admin/model\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <i className=\"fa fa-cogs d-lg-none d-xl-none\" />\r\n                Model\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-with-icons\">\r\n                <DropdownItem tag={Link} to=\"/admin/model/train\" onClick={(e) => smoothScroll()}>\r\n                  Train\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/admin/model/info\" onClick={(e) => smoothScroll()}>\r\n                  Actual model\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/admin/model/history\">\r\n                  History\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"primary\"\r\n                data-toggle=\"dropdown\"\r\n                href=\"/admin/user\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <i className=\"fa fa-cogs d-lg-none d-xl-none\" />\r\n                Users\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-with-icons\">\r\n                <DropdownItem tag={Link} to=\"/admin/users\" onClick={(e) => smoothScroll()}>\r\n                  List\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to=\"/admin/users/create\" onClick={(e) => smoothScroll()}>\r\n                  Create\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <NavItem>\r\n              <Button\r\n                className=\"nav-link d-none d-lg-block\"\r\n                color=\"default\"\r\n                onClick={(e) => goBack(e)}\r\n              >\r\n                Back\r\n              </Button>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default function AdminHeader() {\r\n  return (\r\n    <div className=\"page-header header-filter\">\r\n      <div className=\"squares square1\" />\r\n      <div className=\"squares square2\" />\r\n      <div className=\"squares square3\" />\r\n      <div className=\"squares square4\" />\r\n      <div className=\"squares square5\" />\r\n      <div className=\"squares square6\" />\r\n      <div className=\"squares square7\" />\r\n      <Container>\r\n        <div className=\"content-center brand\">\r\n          <h1 className=\"h1-seo\">Admin Pane</h1>\r\n          <h3 className=\"d-none d-sm-block\">\r\n            Check an option on the navbar\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\"\r\nimport AdminHeader from \"components/PageHeader/AdminHeader\";\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport {\r\n} from \"reactstrap\";\r\n\r\nexport default function Admin() {\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"index-page\");\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"index-page\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"administrator\"} />}\r\n            >\r\n                <AdminNavbar />\r\n                <AdminHeader />\r\n            </PermissionsGate>\r\n\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\"\r\nimport $ from 'jquery'\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardImg,\r\n    CardTitle,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Alert,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\nasync function getTrainingModelData() {\r\n    return fetch('/getModelData', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\nasync function getModelFormat() {\r\n    return fetch('/getModelFormat', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\nasync function uploadFileForCheck(data) {\r\n    return fetch('/checkModel', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\n\r\nexport default function ModelInfo() {\r\n\r\n    const checkModel = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Disable components\r\n        $('.AlertContainer').hide()\r\n        document.getElementById(\"file\").disabled = true;\r\n        document.getElementById(\"btn-checkModel\").disabled = true;\r\n\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n\r\n        //Check if file type is .csv\r\n        if (fileField.files[0]['type'] !== 'text/csv') {\r\n            $('.AlertContainer').show()\r\n            $('.AccuracyAlert').text(\"File must be .csv format!\")\r\n            $('.ExtraAttacksAlert').hide()\r\n\r\n            //Enable components\r\n            document.getElementById(\"file\").disabled = false;\r\n            document.getElementById(\"btn-checkModel\").disabled = false;\r\n\r\n            return\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', fileField.files[0]);\r\n\r\n        uploadFileForCheck(formData)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n\r\n                //Enable components\r\n                document.getElementById(\"file\").disabled = false;\r\n                document.getElementById(\"btn-checkModel\").disabled = false;\r\n\r\n                if (result['message'] === 200) {\r\n                    $('.AlertContainer').show()\r\n                    $('.ExtraAttacksAlert').hide()\r\n                    $('.AccuracyAlert').text(\"Accuracy: \" + result[\"accuracy\"])\r\n                    if (result[\"extraAttacks\"].length !== 0) {\r\n                        $('.ExtraAttacksAlert').show()\r\n                        $('.ExtraAttacksAlert').text(\"We found some extra attacks that we remove for the check: \" + result[\"extraAttacks\"])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const changeName = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n        var x = document.getElementById(\"labelFile\");\r\n        if (fileField.files[0])\r\n            x.innerHTML = fileField.files[0]['name']\r\n    }\r\n\r\n    const getModelInfo = (e) => {\r\n\r\n        $('.DatasetFormatAlert').hide()\r\n\r\n        getTrainingModelData()\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result['message'] === 200) {\r\n                    var parElement = document.getElementById(\"resultData\");\r\n\r\n                    var textToAdd = \"\"\r\n                    for (const [key, value] of Object.entries(result['modelInfo'])) {\r\n\r\n                        document.getElementById(\"in-previous-file\").value = result['modelInfo']['trainingFileName'];\r\n                        document.getElementById(\"in-accuracy\").value = result['modelInfo']['accuracy'];\r\n                        document.getElementById(\"in-date\").value = result['modelInfo']['date'];\r\n                        document.getElementById(\"in-time\").value = result['modelInfo']['timeTraining'];\r\n                        document.getElementById(\"in-rows\").value = result['modelInfo']['rows'];\r\n                        document.getElementById(\"in-pruning\").value = result['modelInfo']['improved'];\r\n                        document.getElementById(\"in-columns\").value = result['modelInfo']['columns'];\r\n                        document.getElementById(\"in-attacks\").value = result['modelInfo']['attack_list'];\r\n\r\n                        textToAdd += key + \" -> \" + value + \"\\n\"\r\n                    }\r\n\r\n                    var text = document.createTextNode(textToAdd);\r\n                    parElement.appendChild(text);\r\n\r\n                } else {\r\n                    throw Error(result.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            });\r\n\r\n        getModelFormat()\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result['message'] === 200) {\r\n                    $('.DatasetFormatAlert').show()\r\n                    var text = \"\"\r\n                    result[\"modelFormat\"].forEach(function (column) {\r\n                        text += column + \", \"\r\n                    })\r\n                    $('.DatasetFormatAlert').text(\"File must have only this colums: \" + text);\r\n                } else {\r\n                    throw Error(result.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        $('.AlertContainer').hide()\r\n        $('.DatasetFormatAlert').hide()\r\n        getModelInfo()\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            $('.AlertContainer').hide()\r\n            $('.DatasetFormatAlert').hide()\r\n        };\r\n    }, []);\r\n\r\n    const modelData = {\r\n        color: \"gray\",\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"administrator\"} />}\r\n            >\r\n                <AdminNavbar />\r\n                <div className=\"wrapper\">\r\n                    <div className=\"main\">\r\n                        <div className=\"section section-basic\" id=\"basic-elements\">\r\n                            <section className=\"section section-lg\">\r\n                                <Container>\r\n                                    <h5 className=\"text-on-back\">Model</h5>\r\n\r\n                                    <Row>\r\n                                        <Col className=\"offset-lg-0 offset-md-3\" >\r\n                                            <div\r\n                                                className=\"square square-7\"\r\n                                                id=\"square7\"\r\n                                            />\r\n                                            <div\r\n                                                className=\"square square-8\"\r\n                                                id=\"square8\"\r\n                                            />\r\n                                            <Card className=\"card-register\">\r\n                                                <CardHeader>\r\n                                                    <CardImg\r\n                                                        alt=\"...\"\r\n                                                        src={require(\"assets/img/square1.png\").default}\r\n                                                    />\r\n                                                    <CardTitle tag=\"h4\">data</CardTitle>\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    <Form className=\"form\" autocomplete=\"off\">\r\n                                                        <Row>\r\n                                                            <Col md=\"3\">\r\n                                                                <FormGroup>\r\n                                                                    <label>File used</label>\r\n                                                                    <Input id=\"in-previous-file\" style={modelData} defaultValue=\"File used\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md=\"3\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Accuracy</label>\r\n                                                                    <Input id=\"in-accuracy\" style={modelData} placeholder=\"Accuracy\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Date</label>\r\n                                                                    <Input id=\"in-date\" style={modelData} placeholder=\"Date\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Rows</label>\r\n                                                                    <Input id=\"in-rows\" style={modelData} defaultValue=\"Rows\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md=\"3\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Training time (s)</label>\r\n                                                                    <Input id=\"in-time\" style={modelData} defaultValue=\"Training time (s)\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md=\"2\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Pruning</label>\r\n                                                                    <Input id=\"in-pruning\" style={modelData} defaultValue=\"Pruning\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"12\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Columns</label>\r\n                                                                    <Input id=\"in-columns\" style={modelData} placeholder=\"Columns\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"12\">\r\n                                                                <FormGroup>\r\n                                                                    <label>Attacks</label>\r\n                                                                    <Input id=\"in-attacks\" style={modelData} placeholder=\"Attacks\" type=\"text\" readonly=\"readonly\" />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Form>\r\n                                                </CardBody>\r\n                                                <CardFooter>\r\n                                                    <Alert className=\"DatasetFormatAlert\" color=\"info\">\r\n                                                        <strong></strong>\r\n                                                    </Alert >\r\n                                                    <Form>\r\n                                                        <h4>Check the model</h4>\r\n                                                        <div class=\"form-group\" >\r\n                                                            <div class=\"custom-file\" >\r\n                                                                <input onChange={(e) => changeName(e)} type=\"file\" class=\"custom-file-input\" name=\"file\" id=\"file\" accept=\".csv\" />\r\n                                                                <label id=\"labelFile\" class=\"custom-file-label\" for=\"file\">\r\n                                                                    Select a file\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <Button className=\"btn-round\" color=\"info\" id=\"btn-checkModel\" onClick={(e) => checkModel(e)} >\r\n                                                            Check model\r\n                                                        </Button>\r\n                                                    </Form>\r\n                                                    <div className=\"AlertContainer\">\r\n                                                        <Alert className=\"ExtraAttacksAlert\" color=\"danger\">\r\n                                                            <strong></strong>\r\n                                                        </Alert >\r\n                                                        <Alert className=\"AccuracyAlert\" color=\"info\">\r\n                                                            <strong></strong>\r\n                                                        </Alert >\r\n                                                    </div>\r\n                                                </CardFooter>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Container>\r\n                                <Container>\r\n\r\n                                </Container>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PermissionsGate>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nimport AdminNavBar from \"components/Navbars/AdminNavbar\"\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Form,\r\n    Alert,\r\n    Table,\r\n    Label,\r\n    Input,\r\n    FormGroup,\r\n} from \"reactstrap\";\r\n\r\nasync function uploadFile(data) {\r\n    return fetch('/setFile', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\nasync function setPredictors(data) {\r\n    return fetch('/setPredictors', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\nasync function getPrunningData() {\r\n    return fetch('/prunning', {\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nasync function finishModelTrain(data) {\r\n    return fetch('/finishModelTrain', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\nexport default function Train() {\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"profile-page\");\r\n        document.body.classList.toggle(\"index-page\");\r\n        $('.AlertContainer').hide()\r\n        $('.AlertPredictorsContainer').hide()\r\n        $('.AlertPrunningContainer').hide()\r\n\r\n        document.getElementById(\"btn-updatePredictors\").disabled = true;\r\n        document.getElementById(\"btn-trainModel\").disabled = true;\r\n\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"profile-page\");\r\n            document.body.classList.toggle(\"index-page\");\r\n            $('.AlertContainer').hide()\r\n            $('.AlertPredictorsContainer').hide()\r\n            $('.AlertPrunningContainer').hide()\r\n\r\n        };\r\n    }, []);\r\n\r\n    const cleanTableAndAlerts = () => {\r\n        var tableHeaderRowCount = 1;\r\n        var table = document.getElementById('myTable');\r\n        if (table != null) {\r\n            var rowCount = table.rows.length;\r\n            for (var i = tableHeaderRowCount; i < rowCount; i++) {\r\n                table.deleteRow(tableHeaderRowCount);\r\n            }\r\n\r\n            $('.AlertPredictorsContainer').hide()\r\n            $('.AlertPrunningContainer').hide()\r\n        }\r\n    }\r\n\r\n    const train = (e) => {\r\n        e.preventDefault();\r\n\r\n        cleanTableAndAlerts();\r\n\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n        const formData = new FormData();\r\n        formData.append('file', fileField.files[0]);\r\n\r\n        //Check if file type is .csv\r\n        if (fileField.files[0]['type'] !== 'text/csv') {\r\n            $('.AlertContainer').show()\r\n            $('.AccuracyAlert').text(\"File must be .csv format!\")\r\n\r\n            //Enable components\r\n            document.getElementById(\"file\").disabled = false;\r\n            document.getElementById(\"btn-analyzeFile\").disabled = false;\r\n            //Disable other buttons\r\n            document.getElementById(\"btn-updatePredictors\").disabled = true;\r\n            document.getElementById(\"btn-trainModel\").disabled = true;\r\n\r\n            return\r\n        }\r\n\r\n        $('.AlertContainer').show()\r\n        $('.AccuracyAlert').text(\"Analyzing file, wait please...\")\r\n\r\n        //Disable other buttons\r\n        document.getElementById(\"file\").disabled = true;\r\n        document.getElementById(\"btn-analyzeFile\").disabled = true;\r\n        document.getElementById(\"btn-updatePredictors\").disabled = true;\r\n        document.getElementById(\"btn-trainModel\").disabled = true;\r\n\r\n        uploadFile(formData)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                //console.log('Success:', result);\r\n                if (result['message'] === 200) {\r\n\r\n                    $('.AlertContainer').show()\r\n                    $('.AccuracyAlert').text(\"Ready! - Now choose the predictors\")\r\n\r\n                    //Enable buttons\r\n                    document.getElementById(\"file\").disabled = false;\r\n                    document.getElementById(\"btn-analyzeFile\").disabled = false;\r\n                    document.getElementById(\"btn-updatePredictors\").disabled = false;\r\n\r\n                    var myObj = JSON.parse(result['predictors']);\r\n                    var counter = 1;\r\n\r\n                    var lista = document.getElementById(\"myTable\");\r\n\r\n                    for (const key in myObj) {\r\n\r\n                        var tr = document.createElement(\"tr\");\r\n                        lista.appendChild(tr);\r\n\r\n                        var columna = document.createElement(\"td\")\r\n                        columna.innerHTML = counter.toString();\r\n                        tr.appendChild(columna);\r\n\r\n                        for (const item in myObj[key]) {\r\n\r\n                            columna = document.createElement(\"td\")\r\n                            columna.innerHTML = myObj[key][item];\r\n                            tr.appendChild(columna);\r\n                        }\r\n\r\n                        columna = document.createElement(\"td\")\r\n\r\n                        var checkbox = document.createElement(\"Input\");\r\n                        checkbox.type = \"checkbox\";\r\n                        checkbox.name = \"select\";\r\n                        checkbox.className += \"form-check-input\";\r\n\r\n                        columna.appendChild(checkbox)\r\n\r\n                        tr.appendChild(columna);\r\n\r\n                        counter += 1\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const changeName = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n        var x = document.getElementById(\"labelFile\");\r\n        if (fileField.files[0])\r\n            x.innerHTML = fileField.files[0]['name']\r\n    }\r\n\r\n    const checkPredictors = (e) => {\r\n        e.preventDefault();\r\n\r\n        var predictors = [];\r\n\r\n        document.getElementById(\"btn-trainModel\").disabled = true;\r\n\r\n        var resume_table = document.getElementById(\"myTable\");\r\n\r\n        var predictorsCount = 0;\r\n\r\n        $('table [type=\"checkbox\"]').each(function (i, chk) {\r\n            if (chk.checked) {\r\n                //console.log(resume_table.rows[i + 1].cells[1].innerText, \"Checked!\");\r\n                predictors.push(resume_table.rows[i + 1].cells[1].innerText)\r\n                predictorsCount += 1\r\n            }\r\n        });\r\n\r\n        if (predictorsCount < 2) {\r\n            $('.AlertPredictorsContainer').show()\r\n            $('.AccuracyPredictorsAlert').text(\"You must choose at least 2 predictors\")\r\n            return\r\n        }\r\n\r\n        var jsonData = {}\r\n        jsonData[\"predictors\"] = predictors\r\n\r\n        setPredictors(JSON.stringify(jsonData))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('Success:', result);\r\n                if (result['message'] === 200) {\r\n                    $('.AlertPredictorsContainer').show()\r\n                    $('.AccuracyPredictorsAlert').text(\"Accuracy: \" + result[\"accuracy\"])\r\n                    prunning()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const prunning = () => {\r\n        $('.AlertPrunningContainer').show()\r\n        $('.AccuracyPrunningAlert').text(\"Calculating the accuracy, wait please...\")\r\n        document.getElementById(\"btn-trainModel\").disabled = true;\r\n\r\n        getPrunningData()\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('Success:', result);\r\n                if (result['message'] === 200) {\r\n                    $('.AccuracyPrunningAlert').text(\"Accuracy (with pruning): \" + result[\"accuracy\"])\r\n                    document.getElementById(\"btn-trainModel\").disabled = false;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const finishTrain = () => {\r\n\r\n        document.getElementById(\"file\").disabled = true;\r\n        document.getElementById(\"btn-analyzeFile\").disabled = true;\r\n        document.getElementById(\"btn-updatePredictors\").disabled = true;\r\n        document.getElementById(\"btn-trainModel\").disabled = true;\r\n\r\n        var jsonData = {}\r\n\r\n        var remember = document.getElementById('prunning');\r\n        if (remember.checked) {\r\n            jsonData[\"prunning\"] = true\r\n        } else {\r\n            jsonData[\"prunning\"] = false\r\n        }\r\n\r\n        finishModelTrain(JSON.stringify(jsonData))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('Success:', result);\r\n                alert(\"Success training!\")\r\n                navigate('/admin/model/info');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"administrator\"} />}\r\n            >\r\n                <AdminNavBar />\r\n                <div className=\"wrapper\">\r\n                    <div className=\"main\">\r\n                        <div className=\"section section-basic\" id=\"basic-elements\">\r\n                            <Container >\r\n                                <Row >\r\n                                    <Col md=\"10\">\r\n                                        <Card className=\"card-plain\">\r\n                                            <CardHeader>\r\n                                                <h5 className=\"text-on-back\">Select</h5>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <Form>\r\n                                                    <div className=\"form-group\" >\r\n                                                        <div className=\"custom-file\" >\r\n                                                            <input onChange={(e) => changeName(e)} type=\"file\" className=\"custom-file-input\" name=\"file\" id=\"file\" accept=\".csv\"/>\r\n                                                            <label id=\"labelFile\" className=\"custom-file-label\" htmlFor=\"file\">\r\n                                                                Select file\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <button type=\"submit\" id=\"btn-analyzeFile\" className=\"btn btn-info btn-round\" onClick={(e) => train(e)} >\r\n                                                        Analyze file\r\n                                                    </button>\r\n                                                </Form>\r\n                                                <div className=\"AlertContainer\">\r\n                                                    <Alert className=\"AccuracyAlert\" color=\"info\">\r\n                                                        <strong>Train completed!</strong>\r\n                                                    </Alert >\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <section className=\"section section-lg\">\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <Card className=\"card-plain\">\r\n                                                        <CardHeader>\r\n                                                            <h5 className=\"text-on-back\">Predictors</h5>\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <Col className=\"\" lg=\"12\" md=\"6\" >\r\n                                                                <Table className=\"table responsive\" id=\"myTable\">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th className=\"text-left\">#</th>\r\n                                                                            <th className=\"text-left\">Predictor</th>\r\n                                                                            <th className=\"text-left\">Importance</th>\r\n                                                                            <th className=\"text-left\">Select</th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody> </tbody>\r\n                                                                </Table>\r\n                                                            </Col>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <button type=\"submit\" id=\"btn-updatePredictors\" className=\"btn btn-info btn-round\" onClick={(e) => checkPredictors(e)} >\r\n                                                    Update predictors\r\n                                                </button>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <div className=\"AlertPredictorsContainer\">\r\n                                                    <Alert className=\"AccuracyPredictorsAlert\" color=\"info\">\r\n                                                    </Alert >\r\n                                                </div>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </section>\r\n                                </Row>\r\n                                <Row>\r\n                                    <section className=\"section section-lg\">\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <Card className=\"card-plain\">\r\n                                                        <CardHeader>\r\n                                                            <h5 className=\"text-on-back\">Pruning</h5>\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <Col className=\"\" lg=\"12\" md=\"6\" >\r\n                                                                <div className=\"AlertPrunningContainer\">\r\n                                                                    <Alert className=\"AccuracyPrunningAlert\" color=\"info\">\r\n                                                                    </Alert >\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Row>\r\n                                                                <FormGroup check className=\"text-left\">\r\n                                                                    <Label check>\r\n                                                                        <Input id=\"prunning\" type=\"checkbox\" />\r\n                                                                        <span className=\"form-check-sign\" />I want to pruning the model tree\r\n                                                                    </Label>\r\n                                                                </FormGroup>\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <button type=\"submit\" className=\"btn btn-info btn-round\" id=\"btn-trainModel\" onClick={(e) => finishTrain(e)} >\r\n                                                    Train the model\r\n                                                </button>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </section>\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PermissionsGate>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\"\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardTitle,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    Table,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\nasync function getTrainModelHistory() {\r\n    return fetch('/getTrainModelHistory', {\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nexport default function ModelHistory() {\r\n\r\n    const getModelHistory = (e) => {\r\n\r\n        getTrainModelHistory()\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result['message'] === 200) {\r\n\r\n                    var counter = 1;\r\n                    result['modelHistory'].forEach((element) => {\r\n\r\n                        var lista = document.getElementById(\"myTable\");\r\n                        var tr = document.createElement(\"tr\");\r\n                        lista.appendChild(tr);\r\n\r\n                        var columna = document.createElement(\"td\")\r\n                        columna.innerHTML = counter.toString();\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['trainingFileName'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['date'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['timeTraining'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['improved'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['accuracy'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['rows'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['columns'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['attack_list'];\r\n                        tr.appendChild(columna);\r\n\r\n                        counter += 1\r\n                    }\r\n                    )\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        var lista = document.getElementById(\"myTable\");\r\n        if(lista != null) {\r\n            getModelHistory()\r\n        }\r\n\r\n        return function cleanup() {\r\n        };\r\n    }, []);\r\n\r\n    const goUp = (e) => {\r\n        e.preventDefault()\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"administrator\"} />}\r\n            >\r\n                <AdminNavbar />\r\n                <div className=\"wrapper\">\r\n\r\n                    <div className=\"main\">\r\n                        <div className=\"section section-basic\" id=\"basic-elements\">\r\n                            <section className=\"section section-lg\">\r\n                                <Container>\r\n                                    <h5 className=\"text-on-back\">Model</h5>\r\n\r\n                                    <Card >\r\n                                        <CardHeader>\r\n                                            <CardTitle tag=\"h3\">History list</CardTitle>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Table responsive id=\"myTable\" data-show-toggle=\"false\" data-expand-first=\"true\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"text-left\">#</th>\r\n                                                                <th className=\"text-left\">Archivo usado</th>\r\n                                                                <th className=\"text-left\">Fecha</th>\r\n                                                                <th className=\"text-left\">Tiempo </th>\r\n                                                                <th className=\"text-left\">Podado</th>\r\n                                                                <th className=\"text-left\">Accuracy</th>\r\n                                                                <th className=\"text-left\">Filas</th>\r\n                                                                <th className=\"text-left\">Columnas</th>\r\n                                                                <th className=\"text-left\">Ataques</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </CardBody>\r\n                                        <CardFooter>\r\n                                            <Button className=\"btn-round\" color=\"info\" size=\"lg\" onClick={(e) => goUp(e)}>\r\n                                                Go up\r\n                                            </Button>\r\n                                        </CardFooter>\r\n                                    </Card>\r\n                                </Container>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PermissionsGate>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport classnames from \"classnames\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\"\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardTitle,\r\n    CardImg,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    Table,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Button,\r\n    Alert,\r\n    FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nasync function modifyUser(data) {\r\n    return fetch('/modifyUser', {\r\n        method: 'PUT',\r\n        body: data\r\n    });\r\n};\r\n\r\nasync function removeUser(data) {\r\n    return fetch('/deleteUser', {\r\n        method: 'DELETE',\r\n        body: data\r\n    });\r\n};\r\n\r\nasync function getUserList() {\r\n    return fetch('/getUsers', {\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nasync function getUser(data) {\r\n    return fetch(`/getUser?username=${data['username']}&email=${data['email']}`, {\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\n// Function to check whether the password introduced has the correct format\r\nfunction checkPassword(pwd) {\r\n    var strongPwdPattern = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\r\n    return strongPwdPattern.test(pwd);\r\n}\r\n\r\nexport default function CreateUserForm() {\r\n\r\n    const [fullNameFocus, setFullNameFocus] = React.useState(false);\r\n    const [emailFocus, setEmailFocus] = React.useState(false);\r\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n    // Variable to store if the email introduced is valid\r\n    const [isValidEmail, setIsValidEmail] = React.useState(false);\r\n    // Variable to store if the email introduced is invalid\r\n    const [isInvalidEmail, setIsInvalidEmail] = React.useState(false);\r\n\r\n    // Variable to store if the pwd introduced is valid\r\n    const [isValidPwd, setIsValidPwd] = React.useState(false);\r\n    // Variable to store if the pwd introduced is invalid\r\n    const [isInvalidPwd, setIsInvalidPwd] = React.useState(false);\r\n\r\n    // Variable to show or not the feedback\r\n    const [showFeedback, setShowFeedback] = React.useState(false);\r\n\r\n    const passRequirements = `Password requirements:\r\n        Must have a minimum length of 8 characters\r\n        Must include 1 capital letter and 1 small letter\r\n        Must include 1 number\r\n        Must include 1 special char`\r\n\r\n    const getUsers = (e) => {\r\n\r\n        var tableHeaderRowCount = 1;\r\n        var table = document.getElementById('myTable');\r\n        var rowCount = table.rows.length;\r\n        for (var i = tableHeaderRowCount; i < rowCount; i++) {\r\n            table.deleteRow(tableHeaderRowCount);\r\n        }\r\n\r\n        getUserList()\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result['message'] === 200) {\r\n\r\n                    var counter = 1;\r\n                    result['users'].forEach((element) => {\r\n\r\n                        var lista = document.getElementById(\"myTable\");\r\n                        var tr = document.createElement(\"tr\");\r\n                        lista.appendChild(tr);\r\n\r\n                        var columna = document.createElement(\"td\")\r\n                        columna.innerHTML = counter.toString();\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['username'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n                        columna.innerHTML = element['email'];\r\n                        tr.appendChild(columna);\r\n\r\n                        columna = document.createElement(\"td\")\r\n\r\n                        var deleteButton = document.createElement(\"Button\");\r\n                        deleteButton.className = \"btn-icon fa fa-times\";\r\n                        deleteButton.color = \"danger\"\r\n                        deleteButton.size = \"sm\"\r\n                        deleteButton.onclick = function () {\r\n\r\n                            var jsonData = {\r\n                                \"username\": element['username'],\r\n                                \"email\": element['email'],\r\n                            }\r\n\r\n                            remove(jsonData)\r\n                        };\r\n\r\n                        var selectButton = document.createElement(\"Button\");\r\n                        selectButton.className = \"btn-icon fa fa-user\";\r\n                        selectButton.color = \"info\"\r\n                        selectButton.size = \"sm\"\r\n                        selectButton.onclick = function () {\r\n\r\n                            var jsonData = {\r\n                                \"username\": element['username'],\r\n                                \"email\": element['email'],\r\n                            }\r\n\r\n                            showUser(jsonData)\r\n\r\n                        };\r\n\r\n                        columna.appendChild(selectButton)\r\n                        columna.appendChild(deleteButton)\r\n\r\n                        tr.appendChild(columna);\r\n\r\n                        counter += 1\r\n                    }\r\n                    )\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const goUp = (e) => {\r\n        e.preventDefault()\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    const showUser = (data) => {\r\n\r\n        setShowFeedback(false);\r\n        setIsInvalidEmail(false);\r\n\r\n        getUser(data)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('Success:', result);\r\n                if (result['message'] === 200) {\r\n                    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n\r\n                    document.getElementById(\"in-username\").value = result['user']['username'];\r\n                    document.getElementById(\"in-email\").value = result['user']['email'];\r\n                    document.getElementById(\"in-pass\").value = \"\";\r\n                    document.getElementById(\"in-role\").checked = result['user']['role'];\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const remove = (data) => {\r\n\r\n        removeUser(JSON.stringify(data))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('Success:', result);\r\n                if (result['message'] === 200) {\r\n                    getUsers()\r\n                    $('.AlertContainer').show()\r\n                    $('.Alert').text(\"User deleted!\")\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const validateInputs = (password) => {\r\n        var valid = false\r\n        if (!checkPassword(password)) {\r\n            setShowFeedback(true);\r\n            setIsValidPwd(false);\r\n            setIsInvalidPwd(true);\r\n        } else {\r\n            setIsValidPwd(true);\r\n            setIsInvalidPwd(false);\r\n            setShowFeedback(true);\r\n            valid = true\r\n        }\r\n\r\n        return valid\r\n    }\r\n\r\n    const modify = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        var username = document.getElementById('in-username').value\r\n        var password = document.getElementById('in-pass').value\r\n        var email = document.getElementById('in-email').value\r\n        var role = document.getElementById('in-role').checked\r\n\r\n        if (email === \"\") {\r\n            setShowFeedback(true);\r\n            setIsValidEmail(false);\r\n            setIsInvalidEmail(true);\r\n            return\r\n        }\r\n\r\n        var changePass = document.getElementById('in-changePass').checked\r\n\r\n        var jsonData = {\r\n            \"username\": username,\r\n            \"email\": email,\r\n            \"role\": role\r\n        }\r\n\r\n        if (changePass) {\r\n            if (validateInputs(password)) {\r\n                jsonData[\"password\"] = password\r\n            };\r\n        }\r\n        document.getElementById(\"btn-modify\").disabled = true;\r\n        modifyUser(JSON.stringify(jsonData))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                document.getElementById(\"btn-modify\").disabled = false;\r\n                if (result['message'] === 200) {\r\n                    getUsers()\r\n                    $('.AlertContainer').show()\r\n                    $('.Alert').text(\"User modified!\")\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        $('.AlertContainer').hide()\r\n        var table = document.getElementById('myTable');\r\n\r\n        if(table != null){\r\n            getUsers()\r\n        }\r\n\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    const renderFeedback = (input, success, error) => {\r\n        return (input\r\n            ? <FormFeedback valid>\r\n                {success}\r\n            </FormFeedback>\r\n            : <FormFeedback invalid>\r\n                {error}\r\n            </FormFeedback>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"administrator\"} />}\r\n            >\r\n                <AdminNavbar />\r\n                <div className=\"wrapper\">\r\n                    <div className=\"main\">\r\n                        <div className=\"section section-basic\" id=\"basic-elements\">\r\n                            <section className=\"section section-lg\">\r\n                                <Container>\r\n                                    <h5 className=\"text-on-back\">User</h5>\r\n                                    <Row>\r\n                                        <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                                            <div\r\n                                                className=\"square square-7\"\r\n                                                id=\"square7\"\r\n                                            />\r\n                                            <div\r\n                                                className=\"square square-8\"\r\n                                                id=\"square8\"\r\n                                            />\r\n                                            <Card className=\"card-register\">\r\n                                                <CardHeader>\r\n                                                    <CardImg\r\n                                                        alt=\"...\"\r\n                                                        src={require(\"assets/img/square1.png\").default}\r\n                                                    />\r\n                                                    <CardTitle tag=\"h5\">Modify</CardTitle>\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    <Form className=\"form\" autocomplete=\"off\">\r\n                                                        <InputGroup\r\n                                                            className={classnames({\r\n                                                                \"input-group-focus\": fullNameFocus,\r\n                                                            })}\r\n                                                        >\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <i className=\"tim-icons icon-single-02\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                id=\"in-username\"\r\n                                                                placeholder=\"Username\"\r\n                                                                type=\"text\"\r\n                                                                onFocus={(e) => setFullNameFocus(true)}\r\n                                                                onBlur={(e) => setFullNameFocus(false)}\r\n                                                            />\r\n                                                        </InputGroup>\r\n                                                        <InputGroup\r\n                                                            className={classnames({\r\n                                                                \"input-group-focus\": emailFocus,\r\n                                                            })}\r\n                                                        >\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <i className=\"tim-icons icon-email-85\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                id=\"in-email\"\r\n                                                                placeholder=\"Email\"\r\n                                                                type=\"text\"\r\n                                                                readonly=\"readonly\"\r\n                                                                onFocus={(e) => setEmailFocus(true)}\r\n                                                                onBlur={(e) => setEmailFocus(false)}\r\n                                                                valid={isValidEmail}\r\n                                                                invalid={isInvalidEmail}\r\n                                                            />\r\n                                                            {showFeedback ? renderFeedback(isValidEmail,\r\n                                                                \"Valid email.\", \"No user is selected.\") : null}\r\n                                                        </InputGroup>\r\n                                                        <InputGroup\r\n                                                            className={classnames({\r\n                                                                \"input-group-focus\": passwordFocus,\r\n                                                            })}\r\n                                                        >\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <i className=\"tim-icons icon-lock-circle\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                id=\"in-pass\"\r\n                                                                placeholder=\"New password\"\r\n                                                                type=\"password\"\r\n                                                                onFocus={(e) => setPasswordFocus(true)}\r\n                                                                onBlur={(e) => setPasswordFocus(false)}\r\n                                                                invalid={isInvalidPwd}\r\n                                                                Title={passRequirements} />\r\n                                                            {showFeedback ? renderFeedback(isValidPwd,\r\n                                                                \"Valid password.\", \"Invalid password.\") : null}\r\n                                                        </InputGroup>\r\n                                                        <FormGroup className=\"text-center\">\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <Input type=\"checkbox\" id=\"in-role\" />Admin\r\n                                                                </Col>\r\n                                                                <Col>\r\n                                                                    <Input type=\"checkbox\" id=\"in-changePass\" />Change Pass?\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n                                                </CardBody>\r\n                                                <CardFooter>\r\n                                                    <Button className=\"btn-round\" id=\"btn-modify\" color=\"info\" size=\"lg\" onClick={(e) => modify(e)}>\r\n                                                        Modify\r\n                                                    </Button>\r\n                                                </CardFooter>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col className=\"offset-lg-0 offset-md-3\" lg=\"7\" md=\"7\">\r\n                                            <div\r\n                                                className=\"square square-7\"\r\n                                                id=\"square7\"\r\n                                            />\r\n                                            <div\r\n                                                className=\"square square-8\"\r\n                                                id=\"square8\"\r\n                                            />\r\n                                            <Card className=\"card-register\">\r\n                                                <CardHeader>\r\n                                                    <CardImg\r\n                                                        alt=\"...\"\r\n                                                        src={require(\"assets/img/square1.png\").default}\r\n                                                    />\r\n                                                    <CardTitle tag=\"h5\">list</CardTitle>\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    <Row lg=\"15\" >\r\n                                                        <Col lg=\"10\" md=\"5\" >\r\n                                                            <Table id=\"myTable\" data-show-toggle=\"false\" data-expand-first=\"true\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th className=\"text-left\">#</th>\r\n                                                                        <th classname=\"username text-left\">Username</th>\r\n                                                                        <th className=\"email text-left\">Email</th>\r\n                                                                        <th className=\"text-right\">Actions</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                </tbody>\r\n                                                            </Table>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                                <CardFooter>\r\n                                                    <Button className=\"btn-round\" color=\"info\" size=\"lg\" onClick={(e) => goUp(e)}>\r\n                                                        Go up\r\n                                                    </Button>\r\n                                                </CardFooter>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <Container>\r\n                                    <Row>\r\n                                        <div className=\"AlertContainer\">\r\n                                            <Alert className=\"Alert\" color=\"info\">\r\n                                                <strong></strong>\r\n                                            </Alert >\r\n                                        </div>\r\n                                    </Row>\r\n                                </Container>\r\n\r\n                                <Container>\r\n                                    <Row>\r\n\r\n                                    </Row>\r\n                                </Container>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PermissionsGate>\r\n        </>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classnames from \"classnames\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\"\r\n\r\nimport PermissionsGate from 'components/Role-based-access/PermissionsGate.js'\r\nimport { SCOPES } from 'components/Role-based-access/PermissionsMap.js'\r\nimport RestrictedContent from 'components/Role-based-access/RestrictedContent.js'\r\n\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardImg,\r\n    CardTitle,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nasync function createUser(data) {\r\n    return fetch('/createUser', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n};\r\n\r\n// Function to check whether the email introduced has the correct format\r\nfunction checkEmail(email) {\r\n    var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailPattern.test(email);\r\n}\r\n\r\n// Function to check whether the password introduced has the correct format\r\nfunction checkPassword(pwd) {\r\n    var strongPwdPattern = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\r\n    return strongPwdPattern.test(pwd);\r\n}\r\n\r\nexport default function CreateUserForm() {\r\n\r\n    const [fullNameFocus, setFullNameFocus] = React.useState(false);\r\n    const [emailFocus, setEmailFocus] = React.useState(false);\r\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    // Variable to store if the pwd introduced is valid\r\n    const [isValidPwd, setIsValidPwd] = useState(false);\r\n    // Variable to store if the pwd introduced is invalid\r\n    const [isInvalidPwd, setIsInvalidPwd] = useState(false);\r\n\r\n    const [email, setEmail] = useState('');\r\n    // Variable to store if the email introduced is valid\r\n    const [isValidEmail, setIsValidEmail] = useState(false);\r\n    // Variable to store if the email introduced is invalid\r\n    const [isInvalidEmail, setIsInvalidEmail] = useState(false);\r\n\r\n    // Variable to show or not the feedback\r\n    const [showFeedback, setShowFeedback] = useState(false);\r\n\r\n    const passRequirements = `Password requirements:\r\n    Must have a minimum length of 8 characters\r\n    Must include 1 capital letter and 1 small letter\r\n    Must include 1 number\r\n    Must include 1 special char`\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const validateInputs = () => {\r\n        var valid = false\r\n        if (!checkEmail(email)) {\r\n            setShowFeedback(true);\r\n            setIsValidEmail(false);\r\n            setIsInvalidEmail(true);\r\n        } else if (!checkPassword(password)) {\r\n            setIsValidEmail(true);\r\n            setIsInvalidEmail(false);\r\n            setShowFeedback(true);\r\n            setIsValidPwd(false);\r\n            setIsInvalidPwd(true);\r\n        } else {\r\n            setIsValidEmail(true);\r\n            setIsInvalidEmail(false);\r\n            setIsValidPwd(true);\r\n            setIsInvalidPwd(false);\r\n            setShowFeedback(true);\r\n            valid = true\r\n        }\r\n\r\n        return valid\r\n    }\r\n\r\n    const create = (e) => {\r\n        e.preventDefault();\r\n        setShowFeedback(false);\r\n\r\n\r\n        var role = document.getElementById('in-role').checked\r\n\r\n        var jsonData = {\r\n            \"username\": username,\r\n            \"password\": password,\r\n            \"email\": email,\r\n            \"role\": role\r\n        }\r\n\r\n        if (validateInputs()) {\r\n\r\n            document.getElementById(\"btn-create\").disabled = true;\r\n\r\n            createUser(JSON.stringify(jsonData))\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    document.getElementById(\"btn-create\").disabled = false;\r\n                    if (result['message'] === 200) {\r\n                        alert(\"User has been created!\")\r\n                        navigate('/admin/users');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        return function cleanup() {};\r\n    }, []);\r\n\r\n    const renderFeedback = (input, success, error) => {\r\n        return (input\r\n            ? <FormFeedback valid>\r\n                {success}\r\n            </FormFeedback>\r\n            : <FormFeedback invalid>\r\n                {error}\r\n            </FormFeedback>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PermissionsGate\r\n                scopes={[SCOPES.administratorCanAccess]}\r\n                RenderForbiddenContent={() => <RestrictedContent allowedRole={\"administrator\"} />}\r\n            >\r\n                <AdminNavbar />\r\n                <div className=\"wrapper\">\r\n\r\n                    <div className=\"main\">\r\n                        <div className=\"section section-basic\" id=\"basic-elements\">\r\n                            <section className=\"section section-lg\">\r\n                                <Container>\r\n                                    <h5 className=\"text-on-back\">User</h5>\r\n                                    <Row>\r\n                                        <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                                            <div\r\n                                                className=\"square square-7\"\r\n                                                id=\"square7\"\r\n                                            />\r\n                                            <div\r\n                                                className=\"square square-8\"\r\n                                                id=\"square8\"\r\n                                            />\r\n                                            <Card className=\"card-register\">\r\n                                                <CardHeader>\r\n                                                    <CardImg\r\n                                                        alt=\"...\"\r\n                                                        src={require(\"assets/img/square1.png\").default}\r\n                                                    />\r\n                                                    <CardTitle tag=\"h5\">Create</CardTitle>\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    <Form className=\"form\" autocomplete=\"off\">\r\n                                                        <InputGroup\r\n                                                            className={classnames({\r\n                                                                \"input-group-focus\": fullNameFocus,\r\n                                                            })}\r\n                                                        >\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <i className=\"tim-icons icon-single-02\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                placeholder=\"Username\"\r\n                                                                type=\"text\"\r\n                                                                onFocus={(e) => setFullNameFocus(true)}\r\n                                                                onBlur={(e) => setFullNameFocus(false)}\r\n                                                                onChange={e => setUsername(e.target.value)}\r\n                                                            />\r\n                                                        </InputGroup>\r\n                                                        <InputGroup\r\n                                                            className={classnames({\r\n                                                                \"input-group-focus\": emailFocus,\r\n                                                            })}\r\n                                                        >\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <i className=\"tim-icons icon-email-85\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                placeholder=\"Email\"\r\n                                                                type=\"text\"\r\n                                                                onFocus={(e) => setEmailFocus(true)}\r\n                                                                onBlur={(e) => setEmailFocus(false)}\r\n                                                                onChange={e => setEmail(e.target.value)}\r\n                                                                valid={isValidEmail}\r\n                                                                invalid={isInvalidEmail}\r\n                                                            />\r\n                                                            {showFeedback ? renderFeedback(isValidEmail,\r\n                                                                \"Valid email.\", \"Invalid email.\") : null}\r\n\r\n                                                        </InputGroup>\r\n                                                        <InputGroup\r\n                                                            className={classnames({\r\n                                                                \"input-group-focus\": passwordFocus,\r\n                                                            })}\r\n                                                        >\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <InputGroupText>\r\n                                                                    <i className=\"tim-icons icon-lock-circle\" />\r\n                                                                </InputGroupText>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                placeholder=\"Password\"\r\n                                                                type=\"password\"\r\n                                                                onFocus={(e) => setPasswordFocus(true)}\r\n                                                                onBlur={(e) => setPasswordFocus(false)}\r\n                                                                onChange={e => setPassword(e.target.value)}\r\n                                                                valid={isValidPwd}\r\n                                                                invalid={isInvalidPwd}\r\n                                                                Title={passRequirements} />\r\n                                                            {showFeedback ? renderFeedback(isValidPwd,\r\n                                                                \"Valid password.\", \"Invalid password.\") : null}\r\n                                                        </InputGroup>\r\n                                                        <FormGroup className=\"text-center\">\r\n                                                            <Input type=\"checkbox\" id=\"in-role\" />Admin\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n                                                </CardBody>\r\n                                                <CardFooter>\r\n                                                    <Button className=\"btn-round\" color=\"info\" id=\"btn-create\" size=\"lg\" onClick={(e) => create(e)}>\r\n                                                        Create\r\n                                                    </Button>\r\n                                                </CardFooter>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Container>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PermissionsGate>\r\n        </>\r\n    );\r\n};","import { Route, Routes, HashRouter } from \"react-router-dom\";\r\n\r\n\r\nimport Index from \"views/Index.js\";\r\n\r\nimport Welcome from \"views/Welcome.js\";\r\n\r\nimport Login from \"components/Operations/Login.js\"\r\nimport Register from \"components/Operations/Register.js\"\r\n\r\nimport Analyze from \"components/Operations/Analyze.js\"\r\nimport AttackTypesInfo from \"components/Operations/AttackTypesInfo.js\"\r\nimport Contact from \"components/Operations/Contact.js\"\r\nimport About from \"components/Operations/About.js\"\r\n\r\nimport Admin from \"components/Operations/Admin.js\"\r\nimport ModelInfo from \"components/Admin/Model/ModelInfo.js\"\r\nimport ModelTrain from \"components/Admin/Model/ModelTrain.js\"\r\nimport ModelHistory from \"components/Admin/Model/ModelHistory.js\"\r\n\r\nimport Users from \"components/Admin/Users/UserList.js\"\r\nimport UserCreateForm from \"components/Admin/Users/CreateUserForm.js\"\r\n\r\nfunction App() {\r\n    return ( //JSX\r\n        <>\r\n            <HashRouter>\r\n                <Routes>\r\n                    <Route exact path=\"/\" element={<Index />} />\r\n\r\n                    <Route exact path=\"/login\" element={<Login />} />\r\n                    <Route exact path=\"/register\" element={<Register />} />\r\n                    <Route exact path=\"/welcome\" element={<Welcome />} />\r\n\r\n                    <Route exact path=\"/analyze\" element={<Analyze />} />\r\n                    <Route exact path=\"/attacks_info\" element={<AttackTypesInfo />} />\r\n                    <Route exact path=\"/contact\" element={<Contact />} />\r\n                    <Route exact path=\"/about\" element={<About />} />\r\n\r\n                    <Route exact path=\"/admin\" element={<Admin />} />\r\n                    <Route exact path=\"/admin/model/train\" element={<ModelTrain />} />\r\n                    <Route exact path=\"/admin/model/info\" element={<ModelInfo />} />\r\n                    <Route exact path=\"/admin/model/history\" element={<ModelHistory />} />\r\n\r\n                    <Route exact path=\"/admin/users\" element={<Users />} />\r\n                    <Route exact path=\"/admin/users/create\" element={<UserCreateForm />} />\r\n                </Routes>\r\n            </HashRouter>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, HashRouter, Route, Routes } from \"react-router-dom\";\r\n\r\nimport \"assets/css/nucleo-icons.css\";\r\nimport \"assets/scss/blk-design-system-react.scss?v=1.2.0\";\r\nimport \"assets/demo/demo.css\";\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default __webpack_public_path__ + \"static/media/square1.082ea17a.png\";"],"sourceRoot":""}